<?xml version="1.0" encoding="UTF-8"?>
<Site BuildName="Linux-c++"  Name="cemnet-rs9">
<BuildNameNotes>
<Note Name="/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/Note.txt">
<DateTime>Wed Nov 11 2009 21:46:21 SGT</DateTime>
<Text>
Could not open "/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/Note.txt" for reading.
</Text>
</Note>
<Note Name="/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/CMakeCache.txt">
<DateTime>Wed Nov 11 2009 21:46:21 SGT</DateTime>
<Text>
# This is the CMakeCache file.
# For build in directory: /mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin
# It was generated by CMake: /usr/bin/cmake
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUI's for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Path to a library.
AVIFILE_AVIPLAY_LIBRARY:FILEPATH=AVIFILE_AVIPLAY_LIBRARY-NOTFOUND

//Path to a file.
AVIFILE_INCLUDE_DIR:PATH=AVIFILE_INCLUDE_DIR-NOTFOUND

//Brown University package include files
BRL_INCLUDE_DIR:STATIC=/home/antiw/demos/vxl-1.13.0/contrib/brl/bbas;/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/contrib/brl/bbas;/home/antiw/demos/vxl-1.13.0/contrib/brl/bseg;/home/antiw/demos/vxl-1.13.0/contrib/brl/bmvl;/home/antiw/demos/vxl-1.13.0/contrib/brl/bpro;/home/antiw/demos/vxl-1.13.0/contrib/brl

//Build the Brown University library package?
BUILD_BRL:BOOL=ON

//Build the contributed libraries?
BUILD_CONTRIB:BOOL=ON

//Build the Conversions Examples?
BUILD_CONVERSIONS:BOOL=ON

//Build VXL's geometry libraries
BUILD_CORE_GEOMETRY:BOOL=ON

//Build VXL's imaging libraries
BUILD_CORE_IMAGING:BOOL=ON

//Build VXL's numerics libraries
BUILD_CORE_NUMERICS:BOOL=ON

//Build VXL's probability libraries (Experimental)
BUILD_CORE_PROBABILITY:BOOL=OFF

//Build VXL's serialisation libraries
BUILD_CORE_SERIALISATION:BOOL=ON

//Build VXL's utility libraries
BUILD_CORE_UTILITIES:BOOL=ON

//Build VXL's core video libraries
BUILD_CORE_VIDEO:BOOL=ON

//Build doxygen-based code documentation.
BUILD_DOCUMENTATION:BOOL=OFF

//Should the examples be built?
BUILD_EXAMPLES:BOOL=ON

//Is this a build for the dashboard?
BUILD_FOR_VXL_DASHBOARD:BOOL=OFF

//Build the GE library package?
BUILD_GEL:BOOL=ON

//Build the Manchester University library package?
BUILD_MUL:BOOL=ON

//Build the MUL tools?
BUILD_MUL_TOOLS:BOOL=ON

//Build the Otago University library package?
BUILD_OUL:BOOL=ON

//Build the Oxford University library package?
BUILD_OXL:BOOL=ON

//Build the T.U.Wien library package?
BUILD_PRIP:BOOL=ON

//Build the RPI library package?
BUILD_RPL:BOOL=ON

//Build Rensselaer Generic Tree Library (rgtl)
BUILD_RPL_RGTL:BOOL=OFF

//Should shared libraries be the default?
BUILD_SHARED_LIBS:BOOL=OFF

//Should the TargetJr packages be built?
BUILD_TARGETJR:BOOL=OFF

//Build the TB library package?
BUILD_TBL:BOOL=ON

//Build the testing tree.
BUILD_TESTING:BOOL=ON

//Build libraries that are no longer actively maintained?
BUILD_UNMAINTAINED_LIBRARIES:BOOL=OFF

//Build VGUI
BUILD_VGUI:BOOL=OFF

//Path to a program.
CMAKE_AR:FILEPATH=/usr/bin/ar

//For backwards compatibility, what version of CMake commands and
// syntax should this version of CMake try to support.
CMAKE_BACKWARDS_COMPATIBILITY:STRING=2.4

//Choose the type of build, options are: None(CMAKE_CXX_FLAGS or
// CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel.
CMAKE_BUILD_TYPE:STRING=

//Enable/Disable color output during build.
CMAKE_COLOR_MAKEFILE:BOOL=ON

//CXX compiler.
CMAKE_CXX_COMPILER:FILEPATH=/usr/bin/c++

//Flags used by the compiler during all build types.
CMAKE_CXX_FLAGS:STRING=

//Flags used by the compiler during debug builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=-g

//Flags used by the compiler during release minsize builds.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the compiler during release builds (/MD /Ob1 /Oi
// /Ot /Oy /Gs will produce slightly less optimized but smaller
// files).
CMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the compiler during Release with Debug Info builds.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g

//C compiler.
CMAKE_C_COMPILER:FILEPATH=/usr/bin/gcc

//Flags used by the compiler during all build types.
CMAKE_C_FLAGS:STRING=

//Flags used by the compiler during debug builds.
CMAKE_C_FLAGS_DEBUG:STRING=-g

//Flags used by the compiler during release minsize builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the compiler during release builds (/MD /Ob1 /Oi
// /Ot /Oy /Gs will produce slightly less optimized but smaller
// files).
CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the compiler during Release with Debug Info builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g

//Flags used by the linker.
CMAKE_EXE_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=/usr/local

//Path to a program.
CMAKE_LINKER:FILEPATH=/usr/bin/ld

//Path to a program.
CMAKE_MAKE_PROGRAM:FILEPATH=/usr/bin/make

//Flags used by the linker during the creation of modules.
CMAKE_MODULE_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_NM:FILEPATH=/usr/bin/nm

//Path to a program.
CMAKE_OBJCOPY:FILEPATH=/usr/bin/objcopy

//Path to a program.
CMAKE_OBJDUMP:FILEPATH=/usr/bin/objdump

//Path to a program.
CMAKE_RANLIB:FILEPATH=/usr/bin/ranlib

//Flags used by the linker during the creation of dll's.
CMAKE_SHARED_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Path to a program.
CMAKE_STRIP:FILEPATH=/usr/bin/strip

//If true, cmake will use relative paths in makefiles and projects.
CMAKE_USE_RELATIVE_PATHS:BOOL=OFF

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Conversions Examples package include files
CONVERSIONS_INCLUDE_DIR:STATIC=/home/antiw/demos/vxl-1.13.0/contrib/conversions

//Path to the coverage program that CTest uses for performing coverage
// inspection
COVERAGE_COMMAND:FILEPATH=/usr/bin/gcov

//Path to a program.
CVSCOMMAND:FILEPATH=CVSCOMMAND-NOTFOUND

//Options passed to the cvs update command.
CVS_UPDATE_OPTIONS:STRING=-d -A -P

//Maximum time allowed before CTest will kill the test.
DART_TESTING_TIMEOUT:STRING=1500

//Path to a file.
DC1394_INCLUDE_DIR:PATH=DC1394_INCLUDE_DIR-NOTFOUND

//Path to a library.
DC1394_LIBRARIES:FILEPATH=DC1394_LIBRARIES-NOTFOUND

//Root of DCMTK source tree (optional).
DCMTK_DIR:PATH=

//Path to a file.
DCMTK_ROOT_INCLUDE_DIR:PATH=DCMTK_ROOT_INCLUDE_DIR-NOTFOUND

//Path to a file.
DCMTK_config_INCLUDE_DIR:PATH=DCMTK_config_INCLUDE_DIR-NOTFOUND

//Path to a file.
DCMTK_dcmdata_INCLUDE_DIR:PATH=DCMTK_dcmdata_INCLUDE_DIR-NOTFOUND

//Path to a library.
DCMTK_dcmdata_LIBRARY:FILEPATH=DCMTK_dcmdata_LIBRARY-NOTFOUND

//Path to a file.
DCMTK_dcmimgle_INCLUDE_DIR:PATH=DCMTK_dcmimgle_INCLUDE_DIR-NOTFOUND

//Path to a library.
DCMTK_dcmimgle_LIBRARY:FILEPATH=DCMTK_dcmimgle_LIBRARY-NOTFOUND

//Path to a file.
DCMTK_ofstd_INCLUDE_DIR:PATH=DCMTK_ofstd_INCLUDE_DIR-NOTFOUND

//Path to a library.
DCMTK_ofstd_LIBRARY:FILEPATH=DCMTK_ofstd_LIBRARY-NOTFOUND

//Path to a file.
ECW_INCLUDE_DIR:PATH=ECW_INCLUDE_DIR-NOTFOUND

//Single output directory for building all executables.
EXECUTABLE_OUTPUT_PATH:PATH=

//Path to a file.
EXPAT_INCLUDE_DIR:PATH=/usr/include

//Path to a library.
EXPAT_LIBRARY:FILEPATH=/usr/lib/libexpat.so

//Path to a file.
FFMPEG_INCLUDE1_DIR:PATH=FFMPEG_INCLUDE1_DIR-NOTFOUND

//Path to a file.
FFMPEG_INCLUDE2_DIR:PATH=FFMPEG_INCLUDE2_DIR-NOTFOUND

//GE package include files
GEL_INCLUDE_DIR:STATIC=/home/antiw/demos/vxl-1.13.0/contrib/gel

//Path to a file.
GEOTIFF_INCLUDE_DIR:PATH=/home/antiw/demos/vxl-1.13.0/v3p/geotiff

//Path to a library.
GEOTIFF_LIBRARY:FILEPATH=GEOTIFF_LIBRARY-NOTFOUND

//Path to a file.
GLUT_INCLUDE_DIR:PATH=GLUT_INCLUDE_DIR-NOTFOUND

//Path to a library.
GLUT_Xi_LIBRARY:FILEPATH=/usr/lib/libXi.so

//Path to a library.
GLUT_Xmu_LIBRARY:FILEPATH=GLUT_Xmu_LIBRARY-NOTFOUND

//Path to a library.
GLUT_glut_LIBRARY:FILEPATH=GLUT_glut_LIBRARY-NOTFOUND

//Path to a file.
JPEG_INCLUDE_DIR:PATH=/usr/include

//Path to a library.
JPEG_LIBRARY:FILEPATH=/usr/lib/libjpeg.so

//Output directory for the vxl libraries
LIBRARY_OUTPUT_PATH:PATH=/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/lib

//Command used to build entire project from the command line.
MAKECOMMAND:STRING=/usr/bin/make -i

//Path to the memory checking command, used for memory error detection.
MEMORYCHECK_COMMAND:FILEPATH=MEMORYCHECK_COMMAND-NOTFOUND

//File that contains suppressions for the memory checker
MEMORYCHECK_SUPPRESSIONS_FILE:FILEPATH=

//VXL module path
MODULE_PATH:STATIC=/home/antiw/demos/vxl-1.13.0/config/cmake/Modules

//Path to a file.
MPEG2_INCLUDE_DIR:PATH=MPEG2_INCLUDE_DIR-NOTFOUND

//Path to a library.
MPEG2_mpeg2_LIBRARY:FILEPATH=MPEG2_mpeg2_LIBRARY-NOTFOUND

//Path to a library.
MPEG2_vo_LIBRARY:FILEPATH=MPEG2_vo_LIBRARY-NOTFOUND

//Deprecated variable giving Manchester University package include
// files
MUL_INCLUDE_DIR:STATIC=/home/antiw/demos/vxl-1.13.0/contrib/mul

//Path to a file.
OPENGL_INCLUDE_DIR:PATH=OPENGL_INCLUDE_DIR-NOTFOUND

//Path to a library.
OPENGL_gl_LIBRARY:FILEPATH=OPENGL_gl_LIBRARY-NOTFOUND

//Path to a library.
OPENGL_glu_LIBRARY:FILEPATH=OPENGL_glu_LIBRARY-NOTFOUND

//Path to a file.
OPENGL_xmesa_INCLUDE_DIR:PATH=OPENGL_xmesa_INCLUDE_DIR-NOTFOUND

//Oxford University package include files
OXL_INCLUDE_DIR:STATIC=/home/antiw/demos/vxl-1.13.0/contrib/oxl

//Path to a library.
PNG_LIBRARY:FILEPATH=/usr/lib/libpng.so

//Path to a file.
PNG_PNG_INCLUDE_DIR:PATH=/usr/include

//PRIP package include files
PRIP_INCLUDE_DIR:STATIC=/home/antiw/demos/vxl-1.13.0/contrib/prip

//Path to a file.
PYTHON_INCLUDE_PATH:PATH=/usr/include/python2.6

//Path to a library.
PYTHON_LIBRARY:FILEPATH=/usr/lib/python2.6/config/libpython2.6.so

//RPI package include files
RPL_INCLUDE_DIR:STATIC=/home/antiw/demos/vxl-1.13.0/contrib/rpl

//Path to scp command, used by CTest for submitting results to
// a Dart server
SCPCOMMAND:FILEPATH=/usr/bin/scp

//Name of the computer/site where compile is being run
SITE:STRING=cemnet-rs9

//Path to a program.
SVNCOMMAND:FILEPATH=/usr/bin/svn

//TB package include files
TBL_INCLUDE_DIR:STATIC=/home/antiw/demos/vxl-1.13.0/contrib/tbl

//Path to a file.
TESTLIB_VCL_WHERE_ROOT_DIR_H:FILEPATH=/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/vcl/vcl_where_root_dir.h

//Path to a file.
TIFF_INCLUDE_DIR:PATH=/usr/include

//Path to a library.
TIFF_LIBRARY:FILEPATH=/usr/lib/libtiff.so

//Enable C++0x standard extensions
VCL_INCLUDE_CXX_0X:BOOL=OFF

//Path to a file.
VIDEODEV2_FOUND:FILEPATH=/usr/include/linux/videodev2.h

//Path to a file.
VIDEODEV_FOUND:FILEPATH=/usr/include/linux/videodev.h

//Enable Streaming SIMD Extensions 2 implementation of rounding
// (hardware dependant).
VIL_CONFIG_ENABLE_SSE2_ROUNDING:BOOL=OFF

//Whether vnl_vector/vnl_matrix accessor methods check index bounds.
VNL_CONFIG_CHECK_BOUNDS:BOOL=ON

//Enable Streaming SIMD Extensions 2 optimisations (hardware dependant).
// Currently broken. For use by VNL developers only.
VNL_CONFIG_ENABLE_SSE2:BOOL=OFF

//Enable Streaming SIMD Extensions 2 implementation of rounding
// (hardware dependant).
VNL_CONFIG_ENABLE_SSE2_ROUNDING:BOOL=OFF

//Whether backward-compatibility methods are provided by vnl.
VNL_CONFIG_LEGACY_METHODS:BOOL=OFF

//Whether thread-safe vnl implementations are used.
VNL_CONFIG_THREAD_SAFE:BOOL=ON

//v3p include files
VTHREEP_INCLUDE_DIR:STATIC=/home/antiw/demos/vxl-1.13.0/v3p

//v3p include files
VTHREEP_INSTALL_INCLUDE_DIR:STATIC=/usr/local/include/vxl/v3p

//Build the V3P DCMTK libraries for reading DICOM files?
VXL_BUILD_DCMTK:BOOL=OFF

//Extra flags appended to CMAKE_CXX_FLAGS
VXL_EXTRA_CMAKE_CXX_FLAGS:STRING=

//Extra flags appended to CMAKE_C_FLAGS
VXL_EXTRA_CMAKE_C_FLAGS:STRING=

//Extra flags appended to CMAKE_EXE_LINKER_FLAGS
VXL_EXTRA_CMAKE_EXE_LINKER_FLAGS:STRING=

//Extra flags appended to CMAKE_MODULE_LINKER_FLAGS
VXL_EXTRA_CMAKE_MODULE_LINKER_FLAGS:STRING=

//Extra flags appended to CMAKE_SHARED_LINKER_FLAGS
VXL_EXTRA_CMAKE_SHARED_LINKER_FLAGS:STRING=

//Use B3P instead of any native EXPAT library?
VXL_FORCE_B3P_EXPAT:BOOL=OFF

//Use B3P instead of any native SHAPELIB library?
VXL_FORCE_B3P_SHAPELIB:BOOL=ON

//Use V3P instead of any native DCMTK library?
VXL_FORCE_V3P_DCMTK:BOOL=OFF

//Use V3P instead of any native GEOTIFF library?
VXL_FORCE_V3P_GEOTIFF:BOOL=OFF

//Use V3P instead of any native JPEG library?
VXL_FORCE_V3P_JPEG:BOOL=OFF

//Use V3P instead of any native MPEG2 library?
VXL_FORCE_V3P_MPEG2:BOOL=OFF

//Use V3P instead of any native PNG library?
VXL_FORCE_V3P_PNG:BOOL=OFF

//Use V3P instead of any native TIFF library?
VXL_FORCE_V3P_TIFF:BOOL=OFF

//Use V3P instead of any native ZLIB library?
VXL_FORCE_V3P_ZLIB:BOOL=OFF

//Use old error reporting methods rather than exceptions?
VXL_LEGACY_ERROR_REPORTING:BOOL=ON

//Where all the vxl libraries are, for clients to use.
VXL_LIBRARY_PATH:STATIC=/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/lib

//Where to store historical measurements
VXL_MBL_TEST_SAVE_MEASUREMENT_ROOT:PATH=

//Should v3p/mpeg2 setup be done with configure (or cmake if NO)
VXL_MPEG_USE_CONFIGURE:BOOL=OFF

//Manchester University package include files
VXL_MUL_INCLUDE_DIR:STATIC=/home/antiw/demos/vxl-1.13.0/contrib/mul

//Re-run the configuration tests?
VXL_UPDATE_CONFIGURATION:BOOL=OFF

//Enable runtime warnings for deprecated functions?
WARN_DEPRECATED:BOOL=ON

//Abort on executing a deprecated function (if runtime warnings
// are enabled)?
WARN_DEPRECATED_ABORT:BOOL=OFF

//Only warn once per function (if runtime warnings are enabled)?
WARN_DEPRECATED_ONCE:BOOL=ON

//Path to a file.
X11_INCLUDE_DIR:PATH=/usr/include

//Path to a library.
X11_X11_LIBRARY:FILEPATH=/usr/lib/libX11.so

//Path to a library.
X11_Xext_LIBRARY:FILEPATH=/usr/lib/libXext.so

//Path to a file.
XERCES_BXML_INCLUDE_PATH:PATH=XERCES_BXML_INCLUDE_PATH-NOTFOUND

//Path to a library.
XERCES_BXML_LIBRARY_PATH:FILEPATH=XERCES_BXML_LIBRARY_PATH-NOTFOUND

//Path to a file.
XERCES_NEW_BXML_INCLUDE_PATH:PATH=XERCES_NEW_BXML_INCLUDE_PATH-NOTFOUND

//Path to a library.
XERCES_NEW_BXML_LIBRARY_PATH:FILEPATH=XERCES_NEW_BXML_LIBRARY_PATH-NOTFOUND

//Path to a file.
ZLIB_INCLUDE_DIR:PATH=/usr/include

//Path to a library.
ZLIB_LIBRARY:FILEPATH=/usr/lib/libz.so

//Dependencies for the target
bbgm_LIB_DEPENDS:STATIC=general;bsta;general;bsta_algo;general;vnl_io;general;vbl_io;general;vsl;general;vnl;general;vil;general;vbl;

//Dependencies for the target
bbgm_batch_LIB_DEPENDS:STATIC=general;bprb;general;brdb;general;bpro_batch;general;bbgm_pro;general;vbl;general;vidl_pro;general;vil_io;general;vil_pro;optimized;/usr/lib/python2.6/config/libpython2.6.so;

//Dependencies for the target
bbgm_pro_LIB_DEPENDS:STATIC=general;bbgm;general;bprb;general;brdb;general;bsta_algo;general;bsta;general;brip;general;vidl;general;vil;general;vil_pro;general;vsl;

//Dependencies for the target
bcal_LIB_DEPENDS:STATIC=general;vgl_algo;general;vnl_algo;general;vnl;general;vgl;general;vcsl;

//Dependencies for the target
bdgl_LIB_DEPENDS:STATIC=general;vdgl;general;vsol;general;vgl_algo;general;vgl;general;vnl_algo;general;vnl;

//Dependencies for the target
bdpg_LIB_DEPENDS:STATIC=general;vnl;general;vbl;

//Dependencies for the target
bgeo_LIB_DEPENDS:STATIC=general;vsl;general;vnl;general;vbl;

//Dependencies for target
bgrl2_LIB_DEPENDS:STATIC=

//Dependencies for the target
bgrl2_algo_LIB_DEPENDS:STATIC=general;bgrl2;

//Dependencies for the target
bgrl_LIB_DEPENDS:STATIC=general;vbl_io;general;vbl;general;vsl;

//Dependencies for the target
bil_LIB_DEPENDS:STATIC=general;vil;general;vil_io;general;vsl;

//Dependencies for the target
bil_algo_LIB_DEPENDS:STATIC=general;vil_algo;

//Dependencies for the target
bmdl_LIB_DEPENDS:STATIC=general;vil_algo;general;imesh;general;vgl;general;vgl_algo;

//Dependencies for the target
bmdl_batch_LIB_DEPENDS:STATIC=general;bprb;general;brdb;general;bpro_batch;general;bmdl_pro;general;vbl;general;vpgl_io;general;vpgl_pro;general;vil_io;general;vil_pro;optimized;/usr/lib/python2.6/config/libpython2.6.so;

//Dependencies for the target
bmdl_pro_LIB_DEPENDS:STATIC=general;bmdl;general;bprb;general;vil;general;vil_io;general;vpgl_file_formats;general;vgl_io;general;bgeo;general;vsol;general;brip;general;vpgl_pro;general;vul;general;vpl;general;imesh_algo;general;minizip;general;minizip;

//Dependencies for the target
bmsh3d_LIB_DEPENDS:STATIC=general;vgl;general;vgl_algo;general;vnl;general;vul;

//Dependencies for the target
bmsh3d_algo_LIB_DEPENDS:STATIC=general;bmsh3d;general;vgl;general;rply;

//Dependencies for the target
bmsh3d_pro_LIB_DEPENDS:STATIC=general;bmsh3d;

//Dependencies for the target
bnl_LIB_DEPENDS:STATIC=general;vnl;general;vnl_algo;

//Dependencies for the target
bnl_algo_LIB_DEPENDS:STATIC=general;vnl;

//Dependencies for the target
boct_LIB_DEPENDS:STATIC=general;vcl;general;vgl;general;vgl_io;general;vbl;general;vnl;

//Dependencies for the target
boxm_LIB_DEPENDS:STATIC=general;boct;general;boxm_io;general;vcl;general;vgl;general;vgl_io;general;vgl_xio;general;vbl;general;vsl;general;vpgl;general;vpgl_algo;general;vsol;general;bgeo;general;bsta;general;bsta_algo;general;vul;general;vil;general;imesh;

//Dependencies for the target
boxm_batch_LIB_DEPENDS:STATIC=general;bprb;general;brdb;general;bpro_batch;general;vbl;general;boxm;general;boxm_pro;general;boxm_io;general;boxm_opt;general;boxm_opt_pro;general;vpgl_io;general;vpgl_pro;general;vil_io;general;vil_pro;optimized;/usr/lib/python2.6/config/libpython2.6.so;

//Dependencies for the target
boxm_io_LIB_DEPENDS:STATIC=general;vcl;general;vgl;general;bgeo;general;/usr/lib/libexpat.so;general;expatpp;

//Dependencies for the target
boxm_opt_LIB_DEPENDS:STATIC=general;boxm;general;vcl;general;vgl;general;vpl;

//Dependencies for the target
boxm_opt_pro_LIB_DEPENDS:STATIC=general;boxm_opt;general;boxm;general;bprb;general;bgeo;general;vgl;general;brdb;general;brip;general;vsol;

//Dependencies for the target
boxm_pro_LIB_DEPENDS:STATIC=general;boxm_io;general;boxm;general;bprb;general;bgeo;general;vgl;general;brdb;general;brip;general;vsol;

//Dependencies for the target
bprb_LIB_DEPENDS:STATIC=general;brdb;general;bxml;general;vbl;general;vsl;

//Value Computed by CMake
bpro_batch_BINARY_DIR:STATIC=/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/contrib/brl/bpro/bpro_batch

//Dependencies for the target
bpro_batch_LIB_DEPENDS:STATIC=general;bprb;general;brdb;

//Value Computed by CMake
bpro_batch_SOURCE_DIR:STATIC=/home/antiw/demos/vxl-1.13.0/contrib/brl/bpro/bpro_batch

//Dependencies for the target
brct_LIB_DEPENDS:STATIC=general;sdet;general;brip;general;rrel;general;vsrl;general;bsol;general;vpgl;general;gevd;general;vdgl;general;vsol;general;mvl;general;vil;general;vil1;general;vgl_algo;general;vgl;general;vnl;general;vbl;general;bdgl;general;bugl;

//Dependencies for the target
brdb_LIB_DEPENDS:STATIC=general;vbl;general;vsl;

//Dependencies for the target
brec_LIB_DEPENDS:STATIC=general;bvxm;general;bbgm;general;bsta_algo;general;bgrl2;general;bsta;general;bvgl;general;bxml;general;vil;general;vul;general;brip;general;vgl_algo;

//Dependencies for the target
brec_batch_LIB_DEPENDS:STATIC=general;bprb;general;brdb;general;bpro_batch;general;bmdl_pro;general;bvxm_pro;general;bvxm_io;general;bvxm_grid_io;general;brec_pro;general;bbgm_pro;general;bvgl_pro;general;brip_pro;general;bsvg_pro;general;vbl;general;vpgl_io;general;vidl_pro;general;vpgl_pro;general;vil_io;general;vil_pro;optimized;/usr/lib/python2.6/config/libpython2.6.so;

//Dependencies for the target
brec_pro_LIB_DEPENDS:STATIC=general;brec;general;bvxm_grid_io;general;bbgm_pro;general;bprb;general;sdet;general;vpgl;general;vpgl_io;general;vpgl_algo;general;vpgl_file_formats;general;vpgl_pro;general;vsol;general;vil;general;vil_io;general;vil_pro;general;vnl;general;vnl_io;general;bgeo;general;vgl;general;vgl_algo;general;vul;general;brip;general;brdb;

//Dependencies for the target
brip_LIB_DEPENDS:STATIC=general;gevd;general;bsta;general;bsol;general;vsol;general;vil1;general;vil_algo;general;vil;general;vgl_algo;general;vgl;general;vnl_algo;general;vnl;general;vbl;general;vul;

//Dependencies for the target
brip_pro_LIB_DEPENDS:STATIC=general;bprb;general;brdb;general;brip;general;vil_pro;general;vsl;

//Value Computed by CMake
brl_BINARY_DIR:STATIC=/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/contrib/brl

//Value Computed by CMake
brl_SOURCE_DIR:STATIC=/home/antiw/demos/vxl-1.13.0/contrib/brl

//Dependencies for the target
bsol_LIB_DEPENDS:STATIC=general;vsol;general;vgl_algo;general;vgl;general;vnl;general;vbl;

//Dependencies for the target
bsta_LIB_DEPENDS:STATIC=general;vnl_algo;general;vbl;general;vnl;

//Dependencies for the target
bsta_algo_LIB_DEPENDS:STATIC=general;bsta;

//Dependencies for the target
bsta_vis_LIB_DEPENDS:STATIC=general;bsta;general;bsvg;

//Dependencies for the target
bsvg_LIB_DEPENDS:STATIC=general;bxml;

//Dependencies for the target
bsvg_pro_LIB_DEPENDS:STATIC=general;bsvg;general;bprb;general;brdb;

//Dependencies for the target
btol_LIB_DEPENDS:STATIC=general;bsol;general;vtol;general;vdgl;general;vsol;general;vgl;general;vnl;

//Dependencies for the target
btom_LIB_DEPENDS:STATIC=general;gevd;general;vil1;general;vnl;general;vbl;

//Dependencies for the target
bugl_LIB_DEPENDS:STATIC=general;vnl;general;vgl_algo;general;vgl;general;vbl;

//Dependencies for the target
bvgl_LIB_DEPENDS:STATIC=general;vgl;general;vsol;general;vnl;general;vil;

//Dependencies for the target
bvgl_pro_LIB_DEPENDS:STATIC=general;bprb;general;vil_pro;general;bvgl;general;vil;general;vil_io;

//Dependencies for the target
bvpl_LIB_DEPENDS:STATIC=general;bvxm_grid;general;vgl;general;bdgl;general;bxml;general;bsvg;general;bsta;general;vpl;

//Dependencies for the target
bvpl_batch_LIB_DEPENDS:STATIC=general;bprb;general;brdb;general;bpro_batch;general;vbl;general;bvpl;general;bvpl_pro;general;bvpl_io;general;bvxm_grid_pro;general;bvxm_grid_io;optimized;/usr/lib/python2.6/config/libpython2.6.so;

//Dependencies for the target
bvpl_io_LIB_DEPENDS:STATIC=general;bvpl;general;vsl;general;vbl;

//Dependencies for the target
bvpl_pro_LIB_DEPENDS:STATIC=general;bprb;general;bvpl_io;general;brdb;

//Dependencies for the target
bvxm_LIB_DEPENDS:STATIC=general;bvxm_grid;general;bsta;general;bsta_algo;general;vcl;general;vgl;general;vgl_io;general;vnl;general;vil;general;vgl_algo;general;vil_algo;general;vpgl;general;vpgl_file_formats;general;vul;general;vbl;general;vsl;general;bgeo;general;brip;general;sdet;general;bil_algo;

//Dependencies for the target
bvxm_algo_LIB_DEPENDS:STATIC=general;bsta;general;bvxm_grid;general;vgl;

//Dependencies for the target
bvxm_batch_LIB_DEPENDS:STATIC=general;bprb;general;brdb;general;bpro_batch;general;vbl;general;bvxm;general;bvxm_pro;general;bvxm_io;general;bvxm_grid_io;general;bvxm_grid_pro;general;vpgl_io;general;vpgl_pro;general;vil_io;general;vil_pro;optimized;/usr/lib/python2.6/config/libpython2.6.so;

//Dependencies for the target
bvxm_grid_LIB_DEPENDS:STATIC=general;vnl;general;vil;general;vil_algo;general;vul;general;vbl;general;vsl;general;vgl;general;vgl_algo;general;bgeo;general;vil3d;general;vil3d_algo;

//Dependencies for the target
bvxm_grid_io_LIB_DEPENDS:STATIC=general;bvxm_grid;general;vsl;general;vbl;general;vil;general;vil_io;general;vul;

//Dependencies for the target
bvxm_grid_pro_LIB_DEPENDS:STATIC=general;bvxm_grid;general;bvxm_grid_io;general;vul;general;vgl;general;imesh;

//Dependencies for the target
bvxm_io_LIB_DEPENDS:STATIC=general;bvxm;general;vsl;general;vbl;general;vil;general;vil_io;

//Dependencies for the target
bvxm_pro_LIB_DEPENDS:STATIC=general;bprb;general;bvxm;general;bvxm_algo;general;bvxm_io;general;bvxm_grid;general;bvxm_grid_io;general;sdet;general;vpgl;general;vpgl_io;general;vpgl_algo;general;vpgl_file_formats;general;vpgl_pro;general;vsol;general;vil_io;general;vil_pro;general;vnl_io;general;vul;general;bgeo;general;brdb;

//Dependencies for the target
bxml_LIB_DEPENDS:STATIC=general;expatpp;general;vbl_io;general;vul;

//Dependencies for the target
clsfy_LIB_DEPENDS:STATIC=general;vpdfl;general;mbl;general;vnl_algo;general;vnl_io;general;vnl;general;vbl;general;vsl;

//Value Computed by CMake
conversions_BINARY_DIR:STATIC=/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/contrib/conversions

//Value Computed by CMake
conversions_SOURCE_DIR:STATIC=/home/antiw/demos/vxl-1.13.0/contrib/conversions

//Value Computed by CMake
dcmtk_BINARY_DIR:STATIC=/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/v3p/dcmtk

//Value Computed by CMake
dcmtk_SOURCE_DIR:STATIC=/home/antiw/demos/vxl-1.13.0/v3p/dcmtk

//Value Computed by CMake
expat_BINARY_DIR:STATIC=/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/contrib/brl/b3p/expat

//Value Computed by CMake
expat_SOURCE_DIR:STATIC=/home/antiw/demos/vxl-1.13.0/contrib/brl/b3p/expat

//Dependencies for the target
expatpp_LIB_DEPENDS:STATIC=general;/usr/lib/libexpat.so;

//Dependencies for the target
fhs_LIB_DEPENDS:STATIC=general;vimt;general;vnl;general;vil_algo;general;vil;general;vsl;

//Value Computed by CMake
gel_BINARY_DIR:STATIC=/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/contrib/gel

//Value Computed by CMake
gel_SOURCE_DIR:STATIC=/home/antiw/demos/vxl-1.13.0/contrib/gel

//Dependencies for the target
geml_LIB_DEPENDS:STATIC=general;vil1;general;vnl;

//Value Computed by CMake
geotiff_BINARY_DIR:STATIC=/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/v3p/geotiff

//Dependencies for the target
geotiff_LIB_DEPENDS:STATIC=general;/usr/lib/libtiff.so;

//Value Computed by CMake
geotiff_SOURCE_DIR:STATIC=/home/antiw/demos/vxl-1.13.0/v3p/geotiff

//Dependencies for the target
gevd_LIB_DEPENDS:STATIC=general;vtol;general;vsol;general;vdgl;general;vil1;general;vil;general;vnl;general;vbl;general;vul;

//Dependencies for the target
gkll_LIB_DEPENDS:STATIC=general;mvl;general;vgel_kl;general;vtol;general;vidl_vil1;general;vil1;general;vbl;

//Dependencies for the target
gmvl_LIB_DEPENDS:STATIC=general;vtol;general;vil1;general;vbl;general;vcl;

//Dependencies for the target
gst_LIB_DEPENDS:STATIC=general;vbl;

//Dependencies for the target
gtrl_LIB_DEPENDS:STATIC=general;vbl;general;netlib;general;v3p_netlib;

//Dependencies for the target
imesh_LIB_DEPENDS:STATIC=general;vgl;general;vul;

//Dependencies for the target
imesh_algo_LIB_DEPENDS:STATIC=general;imesh;general;vgl_algo;general;vpgl;general;vil;

//Dependencies for the target
ipts_LIB_DEPENDS:STATIC=general;vimt_algo;general;vimt;general;vgl;general;vil_algo;general;vil;

//Value Computed by CMake
jpeg_BINARY_DIR:STATIC=/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/v3p/jpeg

//Value Computed by CMake
jpeg_SOURCE_DIR:STATIC=/home/antiw/demos/vxl-1.13.0/v3p/jpeg

//Dependencies for the target
m23d_LIB_DEPENDS:STATIC=general;mbl;general;vnl;general;vnl_algo;general;vgl;

//Dependencies for the target
mbl_LIB_DEPENDS:STATIC=general;vul;general;vnl_io;general;vnl_algo;general;vgl_io;general;vbl_io;general;vsl;general;vil_io;

//Dependencies for the target
mcal_LIB_DEPENDS:STATIC=general;mbl;general;vnl;general;vnl_algo;

//Dependencies for the target
mfpf_LIB_DEPENDS:STATIC=general;clsfy;general;mipa;general;vimt;general;vpdfl;general;mbl;

//Value Computed by CMake
minizip_BINARY_DIR:STATIC=/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/contrib/brl/b3p/minizip

//Dependencies for target
minizip_LIB_DEPENDS:STATIC=

//Value Computed by CMake
minizip_SOURCE_DIR:STATIC=/home/antiw/demos/vxl-1.13.0/contrib/brl/b3p/minizip

//Dependencies for the target
mipa_LIB_DEPENDS:STATIC=general;vimt;general;vpdfl;general;mbl;

//Dependencies for the target
mmn_LIB_DEPENDS:STATIC=general;mbl;general;vnl;general;vil;general;vsl;

//Value Computed by CMake
mpeg2_BINARY_DIR:STATIC=/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/v3p/mpeg2

//Dependencies for target
mpeg2_LIB_DEPENDS:STATIC=

//Value Computed by CMake
mpeg2_SOURCE_DIR:STATIC=/home/antiw/demos/vxl-1.13.0/v3p/mpeg2

//Dependencies for the target
msm_LIB_DEPENDS:STATIC=general;vimt;general;vnl_io;general;vnl;general;vsl;

//Value Computed by CMake
mul_BINARY_DIR:STATIC=/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/contrib/mul

//Value Computed by CMake
mul_SOURCE_DIR:STATIC=/home/antiw/demos/vxl-1.13.0/contrib/mul

//Dependencies for the target
mvl2_LIB_DEPENDS:STATIC=general;vil;general;vul;

//Dependencies for the target
mvl_LIB_DEPENDS:STATIC=general;vil1;general;vnl_algo;general;vnl;general;vbl;general;vgl;general;vgl_algo;general;vul;

//Value Computed by CMake
netlib_BINARY_DIR:STATIC=/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/v3p/netlib

//Dependencies for the target
netlib_LIB_DEPENDS:STATIC=general;m;

//Value Computed by CMake
netlib_SOURCE_DIR:STATIC=/home/antiw/demos/vxl-1.13.0/v3p/netlib

//Dependencies for the target
osl_LIB_DEPENDS:STATIC=general;vnl_algo;general;vnl;general;vgl;general;vil1;general;vbl;

//Dependencies for the target
ouel_LIB_DEPENDS:STATIC=general;vnl_algo;general;vnl;

//Dependencies for the target
oufgl_LIB_DEPENDS:STATIC=general;vil;general;vil1;general;rt;

//Value Computed by CMake
oul_BINARY_DIR:STATIC=/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/contrib/oul

//Value Computed by CMake
oul_SOURCE_DIR:STATIC=/home/antiw/demos/vxl-1.13.0/contrib/oul

//Dependencies for the target
ouml_LIB_DEPENDS:STATIC=general;vgl;general;vnl_algo;general;vnl_io;general;vnl;general;vil1;general;vsl;general;vpl;

//Value Computed by CMake
oxl_BINARY_DIR:STATIC=/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/contrib/oxl

//Value Computed by CMake
oxl_SOURCE_DIR:STATIC=/home/antiw/demos/vxl-1.13.0/contrib/oxl

//Dependencies for the target
oxp_LIB_DEPENDS:STATIC=general;vidl_vil1;general;vnl;general;vil1;general;vul;general;vbl;general;vpl;

//Dependencies for the target
pdf1d_LIB_DEPENDS:STATIC=general;mbl;general;vbl;general;vnl_io;general;vnl;general;vsl;

//Value Computed by CMake
png_BINARY_DIR:STATIC=/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/v3p/png

//Value Computed by CMake
png_SOURCE_DIR:STATIC=/home/antiw/demos/vxl-1.13.0/v3p/png

//Value Computed by CMake
prip_BINARY_DIR:STATIC=/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/contrib/prip

//Value Computed by CMake
prip_SOURCE_DIR:STATIC=/home/antiw/demos/vxl-1.13.0/contrib/prip

//Dependencies for the target
rgrl_LIB_DEPENDS:STATIC=general;rrel;general;rsdl;general;vil3d;general;vil;general;vnl_algo;general;vnl;general;vbl;general;vul;

//Value Computed by CMake
rpl_BINARY_DIR:STATIC=/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/contrib/rpl

//Value Computed by CMake
rpl_SOURCE_DIR:STATIC=/home/antiw/demos/vxl-1.13.0/contrib/rpl

//Dependencies for target
rply_LIB_DEPENDS:STATIC=

//Dependencies for the target
rrel_LIB_DEPENDS:STATIC=general;vnl_algo;general;vnl;general;vgl;

//Dependencies for the target
rsdl_LIB_DEPENDS:STATIC=general;vnl;general;vbl;

//Dependencies for the target
sdet_LIB_DEPENDS:STATIC=general;brip;general;bsol;general;btol;general;bdgl;general;gevd;general;vdgl;general;vtol;general;vsol;general;vil;general;vil_algo;general;vil1;general;vgl_algo;general;vgl;general;vnl_algo;general;vnl;general;vul;general;vbl;

//Value Computed by CMake
shapelib_BINARY_DIR:STATIC=/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/contrib/brl/b3p/shapelib

//Dependencies for target
shapelib_LIB_DEPENDS:STATIC=

//Value Computed by CMake
shapelib_SOURCE_DIR:STATIC=/home/antiw/demos/vxl-1.13.0/contrib/brl/b3p/shapelib

//Dependencies for the target
strk_LIB_DEPENDS:STATIC=general;bsta;general;brip;general;vpro;general;bsol;general;btol;general;gevd;general;vtol;general;vsol;general;vidl_vil1;general;vil1;general;vgl_algo;general;vgl;general;vnl;general;vbl;general;vul;

//Value Computed by CMake
tbl_BINARY_DIR:STATIC=/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/contrib/tbl

//Value Computed by CMake
tbl_SOURCE_DIR:STATIC=/home/antiw/demos/vxl-1.13.0/contrib/tbl

//Dependencies for the target
testlib_LIB_DEPENDS:STATIC=general;vcl;

//Value Computed by CMake
tiff_BINARY_DIR:STATIC=/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/v3p/tiff

//Value Computed by CMake
tiff_SOURCE_DIR:STATIC=/home/antiw/demos/vxl-1.13.0/v3p/tiff

//Dependencies for the target
v3p_netlib_LIB_DEPENDS:STATIC=general;m;

//Dependencies for the target
vbl_LIB_DEPENDS:STATIC=general;vcl;

//Dependencies for the target
vbl_example_templates_LIB_DEPENDS:STATIC=general;vbl;

//Dependencies for the target
vbl_io_LIB_DEPENDS:STATIC=general;vbl;general;vsl;

//Value Computed by CMake
vcl_BINARY_DIR:STATIC=/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/vcl

//Dependencies for the target
vcl_LIB_DEPENDS:STATIC=general;m;

//Value Computed by CMake
vcl_SOURCE_DIR:STATIC=/home/antiw/demos/vxl-1.13.0/vcl

//Dependencies for the target
vcsl_LIB_DEPENDS:STATIC=general;vnl;general;vbl;

//Dependencies for the target
vdgl_LIB_DEPENDS:STATIC=general;vsol;general;vgl_algo;general;vgl;general;vnl_algo;general;vnl;general;vbl_io;general;vbl;general;vsl;general;vul;general;vcl;

//Dependencies for the target
vdtop_LIB_DEPENDS:STATIC=general;vmap;general;vil;

//Dependencies for the target
vepl2_LIB_DEPENDS:STATIC=general;vipl;general;vil;

//Dependencies for the target
vepl_LIB_DEPENDS:STATIC=general;vipl;general;vil1;

//Dependencies for the target
vgel_LIB_DEPENDS:STATIC=general;mvl;general;vgel_kl;general;vtol;general;vil;general;vil1;general;vidl1;general;vidl_vil1;general;vbl;

//Dependencies for the target
vgel_kl_LIB_DEPENDS:STATIC=general;m;

//Dependencies for the target
vgl_LIB_DEPENDS:STATIC=general;vcl;

//Dependencies for the target
vgl_algo_LIB_DEPENDS:STATIC=general;vgl;general;vnl_algo;general;vnl;

//Dependencies for the target
vgl_io_LIB_DEPENDS:STATIC=general;vgl;general;vsl;

//Dependencies for the target
vgl_xio_LIB_DEPENDS:STATIC=general;vgl;general;vsl;

//Value Computed by CMake
vgui_BINARY_DIR:STATIC=/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/core/vgui

//Value Computed by CMake
vgui_SOURCE_DIR:STATIC=/home/antiw/demos/vxl-1.13.0/core/vgui

//Dependencies for the target
vidl1_LIB_DEPENDS:STATIC=general;vbl;general;vul;general;vil;general;vcl;general;mpeg2;general;vo;

//Value Computed by CMake
vidl_BINARY_DIR:STATIC=/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/core/vidl

//Dependencies for the target
vidl_LIB_DEPENDS:STATIC=general;vil;general;vul;

//Value Computed by CMake
vidl_SOURCE_DIR:STATIC=/home/antiw/demos/vxl-1.13.0/core/vidl

//Dependencies for the target
vidl_pro_LIB_DEPENDS:STATIC=general;bprb;general;brdb;general;vidl;general;vsl;

//Dependencies for the target
vidl_vil1_LIB_DEPENDS:STATIC=general;vbl;general;vul;general;vil1;general;vcl;general;mpeg2;general;vo;

//Dependencies for the target
vifa_LIB_DEPENDS:STATIC=general;gevd;general;vtol;general;vsol;general;vdgl;general;vnl;general;vgl;general;vbl;general;vul;general;vil;general;vcl;

//Dependencies for the target
vil1_LIB_DEPENDS:STATIC=general;/usr/lib/libjpeg.so;general;/usr/lib/libtiff.so;general;/usr/lib/libpng.so;general;/usr/lib/libz.so;general;vcl;

//Dependencies for the target
vil1_io_LIB_DEPENDS:STATIC=general;vil1;general;vsl;

//Dependencies for the target
vil3d_LIB_DEPENDS:STATIC=general;vil;general;vul;general;vsl;general;vcl;general;vnl;

//Dependencies for the target
vil3d_algo_LIB_DEPENDS:STATIC=general;vil3d;general;vil_algo;general;vil;general;vnl;general;vgl;

//Dependencies for the target
vil3d_io_LIB_DEPENDS:STATIC=general;vil3d;general;vil_io;

//Dependencies for the target
vil_LIB_DEPENDS:STATIC=general;/usr/lib/libjpeg.so;general;/usr/lib/libtiff.so;general;geotiff;general;/usr/lib/libpng.so;general;/usr/lib/libz.so;general;vcl;

//Dependencies for the target
vil_algo_LIB_DEPENDS:STATIC=general;vil;general;vnl_algo;general;vnl;general;vcl;

//Dependencies for the target
vil_io_LIB_DEPENDS:STATIC=general;vil;general;vsl;

//Dependencies for the target
vil_pro_LIB_DEPENDS:STATIC=general;bprb;general;vul;general;vsl;general;vil_algo;general;vil;general;vil_io;

//Dependencies for the target
vimt3d_LIB_DEPENDS:STATIC=general;vil3d_algo;general;vil3d_io;general;vil3d;general;vimt;general;mbl;general;vgl;general;vnl_io;general;vnl;general;vil;general;vsl;

//Dependencies for the target
vimt_LIB_DEPENDS:STATIC=general;mbl;general;vil_algo;

//Dependencies for the target
vimt_algo_LIB_DEPENDS:STATIC=general;vimt;general;vil_algo;general;vcl;

//Dependencies for the target
vipl_LIB_DEPENDS:STATIC=general;vil;general;vil1;general;vnl;

//Dependencies for the target
vmal_LIB_DEPENDS:STATIC=general;mvl;general;osl;general;vil;general;vgel_kl;general;vtol;general;vidl_vil1;general;vil1;general;vnl_algo;general;vnl;general;vbl;

//Dependencies for the target
vmap_LIB_DEPENDS:STATIC=general;vcl;

//Dependencies for the target
vnl_LIB_DEPENDS:STATIC=general;vcl;

//Dependencies for the target
vnl_algo_LIB_DEPENDS:STATIC=general;netlib;general;v3p_netlib;general;vnl;

//Dependencies for the target
vnl_io_LIB_DEPENDS:STATIC=general;vnl;general;vsl;

//Dependencies for the target
vnl_xio_LIB_DEPENDS:STATIC=general;vnl;general;vsl;

//Dependencies for target
vo_LIB_DEPENDS:STATIC=

//Dependencies for the target
vpdfl_LIB_DEPENDS:STATIC=general;mbl;general;vnl_algo;general;vnl_io;general;vnl;general;vsl;

//Dependencies for the target
vpgl_LIB_DEPENDS:STATIC=general;vnl;general;vnl_algo;general;vnl_io;general;vgl;general;vgl_algo;general;vgl_io;general;vsl;general;bgeo;

//Dependencies for the target
vpgl_algo_LIB_DEPENDS:STATIC=general;vpgl;general;vpgl_file_formats;general;rrel;general;vgl_algo;general;vsol;general;vnl_algo;general;vnl;general;bgeo;

//Dependencies for the target
vpgl_file_formats_LIB_DEPENDS:STATIC=general;vpgl;general;vil;

//Dependencies for the target
vpgl_io_LIB_DEPENDS:STATIC=general;vsl;general;vpgl;general;vnl;general;vnl_io;

//Dependencies for the target
vpgl_pro_LIB_DEPENDS:STATIC=general;bprb;general;vpgl_io;general;vpgl;general;vpgl_algo;general;vnl;general;vil;

//Dependencies for the target
vpgl_xio_LIB_DEPENDS:STATIC=general;vpgl;general;vsl;general;vgl_xio;

//Dependencies for the target
vpl_LIB_DEPENDS:STATIC=general;vcl;

//Dependencies for the target
vpro_LIB_DEPENDS:STATIC=general;sdet;general;brip;general;gevd;general;vtol;general;vsol;general;vidl_vil1;general;vil1;general;vidl1;general;vil;general;vul;general;vbl;

//Dependencies for the target
vpyr_LIB_DEPENDS:STATIC=general;vmap;

//Dependencies for the target
vrml_LIB_DEPENDS:STATIC=general;vul;

//Dependencies for the target
vsl_LIB_DEPENDS:STATIC=general;vcl;

//Dependencies for the target
vsol_LIB_DEPENDS:STATIC=general;vgl_algo;general;vgl_io;general;vgl;general;vnl;general;vbl_io;general;vbl;general;vsl;general;vul;general;vcl;

//Dependencies for the target
vsrl_LIB_DEPENDS:STATIC=general;vtol;general;vdgl;general;vgl;general;vil1;general;vnl;general;vgel;

//Value Computed by CMake
vthreep_BINARY_DIR:STATIC=/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/v3p

//Value Computed by CMake
vthreep_SOURCE_DIR:STATIC=/home/antiw/demos/vxl-1.13.0/v3p

//Dependencies for the target
vtol_LIB_DEPENDS:STATIC=general;vdgl;general;vsol;general;vnl;general;vbl;general;vul;

//Dependencies for the target
vtol_algo_LIB_DEPENDS:STATIC=general;vtol;general;vsol;general;vdgl;general;vil_algo;general;vgl_algo;general;vgl;general;vil;general;vbl;

//Dependencies for the target
vul_LIB_DEPENDS:STATIC=general;vcl;

//Dependencies for the target
vul_io_LIB_DEPENDS:STATIC=general;vul;general;vsl;

//Value Computed by CMake
vxl_BINARY_DIR:STATIC=/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin

//Value Computed by CMake
vxl_SOURCE_DIR:STATIC=/home/antiw/demos/vxl-1.13.0

//Value Computed by CMake
vxl_config_BINARY_DIR:STATIC=/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/config/cmake/config

//Value Computed by CMake
vxl_config_SOURCE_DIR:STATIC=/home/antiw/demos/vxl-1.13.0/config/cmake/config

//Value Computed by CMake
vxlcore_BINARY_DIR:STATIC=/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/core

//Value Computed by CMake
vxlcore_SOURCE_DIR:STATIC=/home/antiw/demos/vxl-1.13.0/core

//Value Computed by CMake
zlib_BINARY_DIR:STATIC=/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/v3p/zlib

//Value Computed by CMake
zlib_SOURCE_DIR:STATIC=/home/antiw/demos/vxl-1.13.0/v3p/zlib


########################
# INTERNAL cache entries
########################

//Was bgui3d successfully built?
BGUI3D_FOUND:INTERNAL=NO
//Brown University package include files
BRL_INSTALL_INCLUDE_DIR:INTERNAL=/usr/local/include/vxl/contrib/brl;/usr/local/include/vxl/contrib/brl/bbas;/usr/local/include/vxl/contrib/brl/bseg;/usr/local/include/vxl/contrib/brl/bvml
//All Core libraries are being built
BUILD_CORE_ALL:INTERNAL=ON
//Advanced flag for variable: BUILD_RPL_RGTL
BUILD_RPL_RGTL-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_BUILD_TOOL
CMAKE_BUILD_TOOL-ADVANCED:INTERNAL=1
//What is the target build tool cmake is generating for.
CMAKE_BUILD_TOOL:INTERNAL=/usr/bin/make
//This is the directory where this CMakeCahe.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=2
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=6
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_RELEASE_VERSION:INTERNAL=patch 2
//Advanced flag for variable: CMAKE_COLOR_MAKEFILE
CMAKE_COLOR_MAKEFILE-ADVANCED:INTERNAL=1
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=/usr/bin/cmake
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=/usr/bin/cpack
//Advanced flag for variable: CMAKE_CTEST_COMMAND
CMAKE_CTEST_COMMAND-ADVANCED:INTERNAL=1
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=/usr/bin/ctest
//Advanced flag for variable: CMAKE_CXX_COMPILER
CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
CMAKE_CXX_COMPILER_WORKS:INTERNAL=1
//Advanced flag for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_C_COMPILER
CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
CMAKE_C_COMPILER_WORKS:INTERNAL=1
//Advanced flag for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Result of TRY_COMPILE
CMAKE_DETERMINE_CXX_ABI_COMPILED:INTERNAL=TRUE
//Result of TRY_COMPILE
CMAKE_DETERMINE_C_ABI_COMPILED:INTERNAL=TRUE
//Path to cache edit program executable.
CMAKE_EDIT_COMMAND:INTERNAL=/usr/bin/ccmake
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=ELF
//Advanced flag for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Unix Makefiles
//Start directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=/home/antiw/demos/vxl-1.13.0
//Install .so files without execute permission.
CMAKE_INSTALL_SO_NO_EXE:INTERNAL=1
//Advanced flag for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_MAKE_PROGRAM
CMAKE_MAKE_PROGRAM-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_NM
CMAKE_NM-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_LOCAL_GENERATORS:INTERNAL=353
//Advanced flag for variable: CMAKE_OBJCOPY
CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_OBJDUMP
CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_RANLIB
CMAKE_RANLIB-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=/usr/share/cmake-2.6
//Advanced flag for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Result of CHECK_TYPE_SIZE
CMAKE_SIZEOF_UNSIGNED_SHORT:INTERNAL=2
//Advanced flag for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_STRIP
CMAKE_STRIP-ADVANCED:INTERNAL=1
//uname command
CMAKE_UNAME:INTERNAL=/bin/uname
//Advanced flag for variable: CMAKE_USE_RELATIVE_PATHS
CMAKE_USE_RELATIVE_PATHS-ADVANCED:INTERNAL=1
//Advanced flag for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//Result of TRY_COMPILE
COMPILE_RESULT:INTERNAL=TRUE
//Conversions Examples package include files
CONVERSIONS_INSTALL_INCLUDE_DIR:INTERNAL=/usr/local/include/vxl/contrib/conversions
//VXL core video libraries built
CORE_VIDEO_FOUND:INTERNAL=YES
//Advanced flag for variable: COVERAGE_COMMAND
COVERAGE_COMMAND-ADVANCED:INTERNAL=1
//Advanced flag for variable: CVSCOMMAND
CVSCOMMAND-ADVANCED:INTERNAL=1
//Advanced flag for variable: CVS_UPDATE_OPTIONS
CVS_UPDATE_OPTIONS-ADVANCED:INTERNAL=1
//Advanced flag for variable: DC1394_INCLUDE_DIR
DC1394_INCLUDE_DIR-ADVANCED:INTERNAL=1
//Advanced flag for variable: DC1394_LIBRARIES
DC1394_LIBRARIES-ADVANCED:INTERNAL=1
//Advanced flag for variable: DCMTK_DIR
DCMTK_DIR-ADVANCED:INTERNAL=1
//Test DIRECTSHOW_SOURCE_COMPILES
DIRECTSHOW_SOURCE_COMPILES:INTERNAL=
//Advanced flag for variable: EXPAT_INCLUDE_DIR
EXPAT_INCLUDE_DIR-ADVANCED:INTERNAL=1
//Advanced flag for variable: EXPAT_LIBRARY
EXPAT_LIBRARY-ADVANCED:INTERNAL=1
//Details about finding EXPAT
FIND_PACKAGE_MESSAGE_DETAILS_EXPAT:INTERNAL=[/usr/lib/libexpat.so][/usr/include]
//Details about finding PythonLibs
FIND_PACKAGE_MESSAGE_DETAILS_PythonLibs:INTERNAL=[/usr/lib/python2.6/config/libpython2.6.so][/usr/include/python2.6]
//GE package include files
GEL_INSTALL_INCLUDE_DIR:INTERNAL=/usr/local/include/vxl/contrib/gel
//Advanced flag for variable: GLUT_INCLUDE_DIR
GLUT_INCLUDE_DIR-ADVANCED:INTERNAL=1
//Advanced flag for variable: GLUT_Xi_LIBRARY
GLUT_Xi_LIBRARY-ADVANCED:INTERNAL=1
//Advanced flag for variable: GLUT_Xmu_LIBRARY
GLUT_Xmu_LIBRARY-ADVANCED:INTERNAL=1
//Advanced flag for variable: GLUT_glut_LIBRARY
GLUT_glut_LIBRARY-ADVANCED:INTERNAL=1
//Test HAS_TEMPLATE_DEPTH_FLAG
HAS_TEMPLATE_DEPTH_FLAG:INTERNAL=1
//Result of TRY_COMPILE
HAVE_CMAKE_SIZEOF_UNSIGNED_SHORT:INTERNAL=TRUE
//Have include stddef.h
HAVE_STDDEF_H:INTERNAL=1
//Have include stdint.h
HAVE_STDINT_H:INTERNAL=1
//Have include sys/types.h
HAVE_SYS_TYPES_H:INTERNAL=1
//Have include unistd.h
HAVE_UNISTD_H:INTERNAL=1
//Result of TRY_COMPILE
HAVE_VXL_BIG_ENDIAN:INTERNAL=TRUE
//Advanced flag for variable: JPEG_INCLUDE_DIR
JPEG_INCLUDE_DIR-ADVANCED:INTERNAL=1
//Advanced flag for variable: JPEG_LIBRARY
JPEG_LIBRARY-ADVANCED:INTERNAL=1
//Advanced flag for variable: MAKECOMMAND
MAKECOMMAND-ADVANCED:INTERNAL=1
//Advanced flag for variable: MEMORYCHECK_COMMAND
MEMORYCHECK_COMMAND-ADVANCED:INTERNAL=1
//Advanced flag for variable: MEMORYCHECK_SUPPRESSIONS_FILE
MEMORYCHECK_SUPPRESSIONS_FILE-ADVANCED:INTERNAL=1
//Have include inttypes.h
MPEG_HAVE_INTTYPES_H:INTERNAL=1
//Have symbol memalign
MPEG_HAVE_MEMALIGN:INTERNAL=
//Manchester University package includes install path
MUL_INSTALL_INCLUDE_DIR:INTERNAL=/usr/local/include/vxl/contrib/mul
//Advanced flag for variable: OPENGL_INCLUDE_DIR
OPENGL_INCLUDE_DIR-ADVANCED:INTERNAL=1
//Advanced flag for variable: OPENGL_gl_LIBRARY
OPENGL_gl_LIBRARY-ADVANCED:INTERNAL=1
//Advanced flag for variable: OPENGL_glu_LIBRARY
OPENGL_glu_LIBRARY-ADVANCED:INTERNAL=1
//Advanced flag for variable: OPENGL_xmesa_INCLUDE_DIR
OPENGL_xmesa_INCLUDE_DIR-ADVANCED:INTERNAL=1
//Otago University package include files
OUL_INCLUDE_DIR:INTERNAL=/home/antiw/demos/vxl-1.13.0/contrib/oul
//Otago University package include files
OUL_INSTALL_INCLUDE_DIR:INTERNAL=/usr/local/include/vxl/contrib/oul
//Oxford University package include files
OXL_INSTALL_INCLUDE_DIR:INTERNAL=/usr/local/include/vxl/contrib/oxl
//Advanced flag for variable: PNG_LIBRARY
PNG_LIBRARY-ADVANCED:INTERNAL=1
//Advanced flag for variable: PNG_PNG_INCLUDE_DIR
PNG_PNG_INCLUDE_DIR-ADVANCED:INTERNAL=1
//PRIP installed include files
PRIP_INSTALL_INCLUDE_DIR:INTERNAL=/usr/local/include/vxl/contrib/prip
//Was Python successfully built?
PYTHON_FOUND:INTERNAL=YES
//Advanced flag for variable: PYTHON_INCLUDE_PATH
PYTHON_INCLUDE_PATH-ADVANCED:INTERNAL=1
//Advanced flag for variable: PYTHON_LIBRARY
PYTHON_LIBRARY-ADVANCED:INTERNAL=1
//RPI package include files
RPL_INSTALL_INCLUDE_DIR:INTERNAL=/usr/local/include/vxl/contrib/rpl
//Result of TRY_RUN
RUN_RESULT:INTERNAL=1
//Advanced flag for variable: SCPCOMMAND
SCPCOMMAND-ADVANCED:INTERNAL=1
//Advanced flag for variable: SITE
SITE-ADVANCED:INTERNAL=1
//Advanced flag for variable: SVNCOMMAND
SVNCOMMAND-ADVANCED:INTERNAL=1
//TB package include files
TBL_INSTALL_INCLUDE_DIR:INTERNAL=/usr/local/include/vxl/contrib/tbl
//Advanced flag for variable: TIFF_INCLUDE_DIR
TIFF_INCLUDE_DIR-ADVANCED:INTERNAL=1
//Advanced flag for variable: TIFF_LIBRARY
TIFF_LIBRARY-ADVANCED:INTERNAL=1
//VXL test 
VCL_ALLOWS_INLINE_INSTANTIATION:INTERNAL=1
//VXL test 
VCL_ALLOWS_NAMESPACE_STD:INTERNAL=1
//VXL test 
VCL_CANNOT_SPECIALIZE_CV:INTERNAL=1
//VXL test 
VCL_CAN_DO_COMPLETE_DEFAULT_TYPE_PARAMETER:INTERNAL=1
//VXL test 
VCL_CAN_DO_IMPLICIT_TEMPLATES:INTERNAL=1
//VXL test 
VCL_CAN_DO_NON_TYPE_FUNCTION_TEMPLATE_PARAMETER:INTERNAL=1
//VXL test 
VCL_CAN_DO_PARTIAL_SPECIALIZATION:INTERNAL=1
//VXL test 
VCL_CAN_DO_STATIC_TEMPLATE_MEMBER:INTERNAL=1
//VXL test 
VCL_CAN_DO_TEMPLATE_DEFAULT_TYPE_PARAMETER:INTERNAL=1
//VXL test  (successful run)
VCL_CHAR_IS_SIGNED:INTERNAL=1
//Result of TRY_COMPILE
VCL_CHAR_IS_SIGNED_COMPILED:INTERNAL=TRUE
//VXL test  (successful run)
VCL_COMPLEX_POW_WORKS:INTERNAL=1
//Result of TRY_COMPILE
VCL_COMPLEX_POW_WORKS_COMPILED:INTERNAL=TRUE
//Have include algorithm
VCL_CXX_HAS_HEADER_ALGORITHM:INTERNAL=1
//Have include bitset
VCL_CXX_HAS_HEADER_BITSET:INTERNAL=1
//Have include cassert
VCL_CXX_HAS_HEADER_CASSERT:INTERNAL=1
//Have include cctype
VCL_CXX_HAS_HEADER_CCTYPE:INTERNAL=1
//Have include cerrno
VCL_CXX_HAS_HEADER_CERRNO:INTERNAL=1
//Have include cfloat
VCL_CXX_HAS_HEADER_CFLOAT:INTERNAL=1
//Have include ciso646
VCL_CXX_HAS_HEADER_CISO646:INTERNAL=1
//Have include climits
VCL_CXX_HAS_HEADER_CLIMITS:INTERNAL=1
//Have include clocale
VCL_CXX_HAS_HEADER_CLOCALE:INTERNAL=1
//Have include cmath
VCL_CXX_HAS_HEADER_CMATH:INTERNAL=1
//Have include complex
VCL_CXX_HAS_HEADER_COMPLEX:INTERNAL=1
//Have include csetjmp
VCL_CXX_HAS_HEADER_CSETJMP:INTERNAL=1
//Have include csignal
VCL_CXX_HAS_HEADER_CSIGNAL:INTERNAL=1
//Have include cstdarg
VCL_CXX_HAS_HEADER_CSTDARG:INTERNAL=1
//Have include cstddef
VCL_CXX_HAS_HEADER_CSTDDEF:INTERNAL=1
//Have include cstdio
VCL_CXX_HAS_HEADER_CSTDIO:INTERNAL=1
//Have include cstdlib
VCL_CXX_HAS_HEADER_CSTDLIB:INTERNAL=1
//Have include cstring
VCL_CXX_HAS_HEADER_CSTRING:INTERNAL=1
//Have include ctime
VCL_CXX_HAS_HEADER_CTIME:INTERNAL=1
//Have include cwchar
VCL_CXX_HAS_HEADER_CWCHAR:INTERNAL=1
//Have include cwctype
VCL_CXX_HAS_HEADER_CWCTYPE:INTERNAL=1
//Have include deque
VCL_CXX_HAS_HEADER_DEQUE:INTERNAL=1
//Have include exception
VCL_CXX_HAS_HEADER_EXCEPTION:INTERNAL=1
//Have include fstream
VCL_CXX_HAS_HEADER_FSTREAM:INTERNAL=1
//Have include functional
VCL_CXX_HAS_HEADER_FUNCTIONAL:INTERNAL=1
//Have include iomanip
VCL_CXX_HAS_HEADER_IOMANIP:INTERNAL=1
//Have include ios
VCL_CXX_HAS_HEADER_IOS:INTERNAL=1
//Have include iosfwd
VCL_CXX_HAS_HEADER_IOSFWD:INTERNAL=1
//Have include iostream
VCL_CXX_HAS_HEADER_IOSTREAM:INTERNAL=1
//Have include iso646.h
VCL_CXX_HAS_HEADER_ISO646_H:INTERNAL=1
//Have include istream
VCL_CXX_HAS_HEADER_ISTREAM:INTERNAL=1
//Have include iterator
VCL_CXX_HAS_HEADER_ITERATOR:INTERNAL=1
//Have include limits
VCL_CXX_HAS_HEADER_LIMITS:INTERNAL=1
//Have include list
VCL_CXX_HAS_HEADER_LIST:INTERNAL=1
//Have include locale
VCL_CXX_HAS_HEADER_LOCALE:INTERNAL=1
//Have include map
VCL_CXX_HAS_HEADER_MAP:INTERNAL=1
//Have include memory
VCL_CXX_HAS_HEADER_MEMORY:INTERNAL=1
//Have include new
VCL_CXX_HAS_HEADER_NEW:INTERNAL=1
//Have include numeric
VCL_CXX_HAS_HEADER_NUMERIC:INTERNAL=1
//Have include ostream
VCL_CXX_HAS_HEADER_OSTREAM:INTERNAL=1
//Have include queue
VCL_CXX_HAS_HEADER_QUEUE:INTERNAL=1
//Have include set
VCL_CXX_HAS_HEADER_SET:INTERNAL=1
//Have include sstream
VCL_CXX_HAS_HEADER_SSTREAM:INTERNAL=1
//Have include stack
VCL_CXX_HAS_HEADER_STACK:INTERNAL=1
//Have include stdexcept
VCL_CXX_HAS_HEADER_STDEXCEPT:INTERNAL=1
//Have include streambuf
VCL_CXX_HAS_HEADER_STREAMBUF:INTERNAL=1
//Have include string
VCL_CXX_HAS_HEADER_STRING:INTERNAL=1
//Have include strstream
VCL_CXX_HAS_HEADER_STRSTREAM:INTERNAL=1
//Have include typeinfo
VCL_CXX_HAS_HEADER_TYPEINFO:INTERNAL=1
//Have include utility
VCL_CXX_HAS_HEADER_UTILITY:INTERNAL=1
//Have include valarray
VCL_CXX_HAS_HEADER_VALARRAY:INTERNAL=1
//Have include vector
VCL_CXX_HAS_HEADER_VECTOR:INTERNAL=1
//Have include tr1/memory
VCL_CXX_HAS_TR1:INTERNAL=1
//VXL test 
VCL_DEFAULT_VALUE:INTERNAL=1
//VXL test 
VCL_DEFINE_SPECIALIZATION:INTERNAL=1
//VXL test 
VCL_FOR_SCOPE_HACK:INTERNAL=1
//VXL test 
VCL_HAS_BOOL:INTERNAL=1
//VXL test 
VCL_HAS_DYNAMIC_CAST:INTERNAL=1
//VXL test 
VCL_HAS_EXCEPTIONS:INTERNAL=1
//VXL test 
VCL_HAS_EXPLICIT:INTERNAL=1
//VXL test 
VCL_HAS_EXPORT:INTERNAL=1
//VXL test  (successful run)
VCL_HAS_LFS:INTERNAL=1
//Result of TRY_COMPILE
VCL_HAS_LFS_COMPILED:INTERNAL=TRUE
//VXL test 
VCL_HAS_MEMBER_TEMPLATES:INTERNAL=1
//VXL test 
VCL_HAS_MUTABLE:INTERNAL=1
//VXL test 
VCL_HAS_NAMESPACES:INTERNAL=1
//VXL test 
VCL_HAS_RTTI:INTERNAL=1
//VXL test  (successful run)
VCL_HAS_SLICED_DESTRUCTOR_BUG:INTERNAL=1
//Result of TRY_COMPILE
VCL_HAS_SLICED_DESTRUCTOR_BUG_COMPILED:INTERNAL=TRUE
//Test  (failed to compile)
VCL_HAS_TEMPLATE_SYMBOLS:INTERNAL=0
//Result of TRY_COMPILE
VCL_HAS_TEMPLATE_SYMBOLS_COMPILED:INTERNAL=FALSE
//VXL test 
VCL_HAS_TYPENAME:INTERNAL=1
//VXL test  (successful run)
VCL_HAS_WORKING_STRINGSTREAM:INTERNAL=1
//Result of TRY_COMPILE
VCL_HAS_WORKING_STRINGSTREAM_COMPILED:INTERNAL=TRUE
//Have symbol std::shared_ptr&lt;void&gt;
VCL_MEMORY_HAS_SHARED_PTR:INTERNAL=
//VXL test 
VCL_NEEDS_INLINE_INSTANTIATION:INTERNAL=1
//Test 
VCL_NEEDS_NAMESPACE_STD:INTERNAL=0
//VXL test 
VCL_NEED_FRIEND_FOR_TEMPLATE_OVERLOAD:INTERNAL=1
//VXL test 
VCL_NO_STATIC_DATA_MEMBERS:INTERNAL=1
//Test 
VCL_NULL_TMPL_ARGS:INTERNAL=0
//VXL test  (successful run)
VCL_NUMERIC_LIMITS_HAS_INFINITY:INTERNAL=1
//Result of TRY_COMPILE
VCL_NUMERIC_LIMITS_HAS_INFINITY_COMPILED:INTERNAL=TRUE
//Test 
VCL_OVERLOAD_CAST:INTERNAL=0
//VXL test  (successful run)
VCL_PROCESSOR_HAS_INFINITY:INTERNAL=1
//Result of TRY_COMPILE
VCL_PROCESSOR_HAS_INFINITY_COMPILED:INTERNAL=TRUE
//VXL test 
VCL_STATIC_CONST_INIT_FLOAT:INTERNAL=1
//VXL test 
VCL_STATIC_CONST_INIT_INT:INTERNAL=1
//Test 
VCL_STATIC_CONST_INIT_NO_DEFN:INTERNAL=0
//VXL test 
VCL_SUNPRO_CLASS_SCOPE_HACK:INTERNAL=1
//VXL test 
VCL_TEMPLATE_MATCHES_TOO_OFTEN:INTERNAL=1
//Have symbol std::tr1::shared_ptr&lt;void&gt;
VCL_TR1_MEMORY_HAS_SHARED_PTR:INTERNAL=1
//Was vgui successfully built?
VGUI_FOUND:INTERNAL=NO
//Are we using an version of gcc &lt; 3.0
VNL_COMPILER_IS_GNUCXX_2XX:INTERNAL=0
//Advanced flag for variable: VNL_CONFIG_CHECK_BOUNDS
VNL_CONFIG_CHECK_BOUNDS-ADVANCED:INTERNAL=1
//Advanced flag for variable: VNL_CONFIG_ENABLE_SSE2
VNL_CONFIG_ENABLE_SSE2-ADVANCED:INTERNAL=1
//Advanced flag for variable: VNL_CONFIG_ENABLE_SSE2_ROUNDING
VNL_CONFIG_ENABLE_SSE2_ROUNDING-ADVANCED:INTERNAL=1
//Advanced flag for variable: VNL_CONFIG_LEGACY_METHODS
VNL_CONFIG_LEGACY_METHODS-ADVANCED:INTERNAL=1
//Advanced flag for variable: VNL_CONFIG_THREAD_SAFE
VNL_CONFIG_THREAD_SAFE-ADVANCED:INTERNAL=1
//Result of TEST_BIG_ENDIAN
VXL_BIG_ENDIAN:INTERNAL=0
//VXL test result
VXL_BYTE:INTERNAL=char
//Serial number of last configuration
VXL_CONFIG_SERIAL_LAST:INTERNAL=2009-04-28-001
//Have symbol finite
VXL_C_MATH_HAS_FINITE:INTERNAL=1
//Have symbol finitef
VXL_C_MATH_HAS_FINITEF:INTERNAL=1
//Have symbol finitel
VXL_C_MATH_HAS_FINITEL:INTERNAL=1
//VXL test 
VXL_C_MATH_HAS_LROUND:INTERNAL=1
//Have symbol sqrtf
VXL_C_MATH_HAS_SQRTF:INTERNAL=1
//Advanced flag for variable: VXL_FORCE_B3P_EXPAT
VXL_FORCE_B3P_EXPAT-ADVANCED:INTERNAL=1
//Advanced flag for variable: VXL_FORCE_B3P_SHAPELIB
VXL_FORCE_B3P_SHAPELIB-ADVANCED:INTERNAL=1
//Advanced flag for variable: VXL_FORCE_V3P_DCMTK
VXL_FORCE_V3P_DCMTK-ADVANCED:INTERNAL=1
//Advanced flag for variable: VXL_FORCE_V3P_GEOTIFF
VXL_FORCE_V3P_GEOTIFF-ADVANCED:INTERNAL=1
//Advanced flag for variable: VXL_FORCE_V3P_JPEG
VXL_FORCE_V3P_JPEG-ADVANCED:INTERNAL=1
//Advanced flag for variable: VXL_FORCE_V3P_MPEG2
VXL_FORCE_V3P_MPEG2-ADVANCED:INTERNAL=1
//Advanced flag for variable: VXL_FORCE_V3P_PNG
VXL_FORCE_V3P_PNG-ADVANCED:INTERNAL=1
//Advanced flag for variable: VXL_FORCE_V3P_TIFF
VXL_FORCE_V3P_TIFF-ADVANCED:INTERNAL=1
//Advanced flag for variable: VXL_FORCE_V3P_ZLIB
VXL_FORCE_V3P_ZLIB-ADVANCED:INTERNAL=1
//VXL test result
VXL_HAS_BYTE:INTERNAL=1
//Test 
VXL_HAS_DBGHELP_H:INTERNAL=0
//Have include emmintrin.h
VXL_HAS_EMMINTRIN_H:INTERNAL=
//Have include ieeefp.h
VXL_HAS_IEEEFP_H:INTERNAL=
//VXL test result
VXL_HAS_IEEE_128:INTERNAL=0
//VXL test result
VXL_HAS_IEEE_32:INTERNAL=1
//VXL test result
VXL_HAS_IEEE_64:INTERNAL=1
//VXL test result
VXL_HAS_IEEE_96:INTERNAL=1
//VXL test result
VXL_HAS_INT_16:INTERNAL=1
//VXL test result
VXL_HAS_INT_32:INTERNAL=1
//VXL test result
VXL_HAS_INT_64:INTERNAL=1
//VXL test result
VXL_HAS_INT_8:INTERNAL=1
//Have include pthread.h
VXL_HAS_PTHREAD_H:INTERNAL=1
//Have include semaphore.h
VXL_HAS_SEMAPHORE_H:INTERNAL=1
//Test  (failed to compile)
VXL_HAS_SSE2_HARDWARE_SUPPORT:INTERNAL=0
//Result of TRY_COMPILE
VXL_HAS_SSE2_HARDWARE_SUPPORT_COMPILED:INTERNAL=FALSE
//Have symbol finite
VXL_IEEEFP_HAS_FINITE:INTERNAL=
//VXL test result
VXL_IEEE_128:INTERNAL=void
//VXL test result
VXL_IEEE_32:INTERNAL=float
//VXL test result
VXL_IEEE_64:INTERNAL=double
//VXL test result
VXL_IEEE_96:INTERNAL=long double
//VXL test result
VXL_INT_16:INTERNAL=short
//VXL test result
VXL_INT_32:INTERNAL=int
//VXL test result
VXL_INT_64:INTERNAL=long long
//VXL test result
VXL_INT_8:INTERNAL=char
//Advanced flag for variable: VXL_MBL_TEST_SAVE_MEASUREMENT_ROOT
VXL_MBL_TEST_SAVE_MEASUREMENT_ROOT-ADVANCED:INTERNAL=1
//Serial number of last configuration
VXL_MPEG_CONFIG_SERIAL_LAST:INTERNAL=2004-01-16-000
//Advanced flag for variable: VXL_MPEG_USE_CONFIGURE
VXL_MPEG_USE_CONFIGURE-ADVANCED:INTERNAL=1
//VXL test 
VXL_PIC_COMPATIBLE:INTERNAL=1
//VXL test  (successful run)
VXL_SSE2_HARDWARE_SUPPORT_POSSIBLE:INTERNAL=1
//Result of TRY_COMPILE
VXL_SSE2_HARDWARE_SUPPORT_POSSIBLE_COMPILED:INTERNAL=TRUE
//help string for how to enable SSE2 support
VXL_SSE2_HARDWARE_SUPPORT_POSSIBLE_HELP:INTERNAL=The current compiler flags do not allow the SSE2 instructions to be used. ;It looks like if you add the flag '-msse2' you will be able to use the ;SSE2 instructions. If you make this change and still see this message, ; you may need to set VXL_UPDATE_CONFIGURATION to ON.
//Have symbol drand48
VXL_STDLIB_HAS_DRAND48:INTERNAL=1
//Have symbol lrand48
VXL_STDLIB_HAS_LRAND48:INTERNAL=1
//VXL test 
VXL_STDLIB_HAS_QSORT:INTERNAL=1
//Have symbol srand48
VXL_STDLIB_HAS_SRAND48:INTERNAL=1
//Have function getpid
VXL_UNISTD_HAS_GETPID:INTERNAL=1
//Have symbol intptr_t
VXL_UNISTD_HAS_INTPTR_T:INTERNAL=1
//Have function lchown
VXL_UNISTD_HAS_LCHOWN:INTERNAL=1
//Have function pread
VXL_UNISTD_HAS_PREAD:INTERNAL=1
//Have function pwrite
VXL_UNISTD_HAS_PWRITE:INTERNAL=1
//Have function tell
VXL_UNISTD_HAS_TELL:INTERNAL=
//Have function ualarm
VXL_UNISTD_HAS_UALARM:INTERNAL=1
//Have symbol useconds_t
VXL_UNISTD_HAS_USECONDS_T:INTERNAL=1
//Have function usleep
VXL_UNISTD_HAS_USLEEP:INTERNAL=1
//VXL test 
VXL_UNISTD_USLEEP_IS_VOID:INTERNAL=1
//Advanced flag for variable: VXL_UPDATE_CONFIGURATION
VXL_UPDATE_CONFIGURATION-ADVANCED:INTERNAL=1
//Advanced flag for variable: WARN_DEPRECATED
WARN_DEPRECATED-ADVANCED:INTERNAL=1
//Advanced flag for variable: WARN_DEPRECATED_ABORT
WARN_DEPRECATED_ABORT-ADVANCED:INTERNAL=1
//Advanced flag for variable: WARN_DEPRECATED_ONCE
WARN_DEPRECATED_ONCE-ADVANCED:INTERNAL=1
//Advanced flag for variable: X11_INCLUDE_DIR
X11_INCLUDE_DIR-ADVANCED:INTERNAL=1
//Advanced flag for variable: X11_X11_LIBRARY
X11_X11_LIBRARY-ADVANCED:INTERNAL=1
//Advanced flag for variable: X11_Xext_LIBRARY
X11_Xext_LIBRARY-ADVANCED:INTERNAL=1
//Advanced flag for variable: ZLIB_INCLUDE_DIR
ZLIB_INCLUDE_DIR-ADVANCED:INTERNAL=1
//Advanced flag for variable: ZLIB_LIBRARY
ZLIB_LIBRARY-ADVANCED:INTERNAL=1
//Already complained about update type.
__CTEST_UPDATE_TYPE_COMPLAINED:INTERNAL=1


</Text>
</Note>
<Note Name="/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/CMakeError.log">
<DateTime>Wed Nov 11 2009 21:46:21 SGT</DateTime>
<Text>
Could not open "/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/CMakeError.log" for reading.
</Text>
</Note>
<Note Name="/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/core/vxl_config.h">
<DateTime>Wed Nov 11 2009 21:46:22 SGT</DateTime>
<Text>
#ifndef vxl_config_h_
#define vxl_config_h_

/* this file either is or was generated from vxl_config.h.in */

/* -------------------- machine word characteristics */

/* machine byte order */
#if defined(__APPLE__)
/* All compilers that support Mac OS X define either __BIG_ENDIAN__ or
   __LITTLE_ENDIAN__ to match the endianness of the architecture being
   compiled for. This is not necessarily the same as the architecture
   of the machine doing the building. In order to support Universal
   Binaries on Mac OS X, we prefer those defines to decide the
   endianness.  On other platform, we use the result of the
   TRY_RUN.  */
# if defined(__BIG_ENDIAN__)
#  define VXL_BIG_ENDIAN 1
#  define VXL_LITTLE_ENDIAN 0
# elif defined(__LITTLE_ENDIAN__)
#  define VXL_BIG_ENDIAN 0
#  define VXL_LITTLE_ENDIAN 1
# else
#  error "Cannot determine machine byte order!"
# endif
#else
/* these are 0 or 1, never empty. */
# define VXL_LITTLE_ENDIAN 1
# define VXL_BIG_ENDIAN    0
#endif

/* we can't just use typedefs, because on systems where there are   */
/* no 64bit integers we have to #define vxl_int_64 to `void' in     */
/* order to catch illegitimate uses. However, typedefs are superior */
/* to #defines, especially for the two keyword types, so we use     */
/* typedefs for the valid cases.                                    */

#define VXL_HAS_BYTE 1
#define VXL_BYTE_STRING "char"
#if 1
  typedef   signed char  vxl_sbyte;
  typedef unsigned char  vxl_byte;
#else
# define vxl_sbyte  void
# define vxl_byte  void
#endif

#define VXL_HAS_INT_8 1
#define VXL_INT_8_STRING "char"
#if 1
  typedef          char  vxl_int_8;
  typedef   signed char  vxl_sint_8;
  typedef unsigned char  vxl_uint_8;
#else
# define vxl_int_8   void
# define vxl_sint_8  void
# define vxl_uint_8  void
#endif

#define VXL_HAS_INT_16 1
#define VXL_INT_16_STRING "short"
#if 1
  typedef          short vxl_int_16;
  typedef   signed short vxl_sint_16;
  typedef unsigned short vxl_uint_16;
#else
# define vxl_int_16  void
# define vxl_sint_16 void
# define vxl_uint_16 void
#endif

#define VXL_HAS_INT_32 1
#define VXL_INT_32_STRING "int"
#if 1
  typedef          int vxl_int_32;
  typedef   signed int vxl_sint_32;
  typedef unsigned int vxl_uint_32;
#else
# define vxl_int_32  void
# define vxl_sint_32 void
# define vxl_uint_32 void
#endif

#define VXL_HAS_INT_64 1
#define VXL_INT_64_STRING "long long"
#if 1
  typedef          long long vxl_int_64;
  typedef   signed long long vxl_sint_64;
  typedef unsigned long long vxl_uint_64;
#else
# define vxl_int_64  void
# define vxl_sint_64 void
# define vxl_uint_64 void
#endif

#define VXL_INT_64_IS_LONG 0

#define VXL_HAS_IEEE_32 1
#define VXL_IEEE_32_STRING "float"
#if 1
  typedef float vxl_ieee_32;
#else
# define vxl_ieee_32 void
#endif

#define VXL_HAS_IEEE_64 1
#define VXL_IEEE_64_STRING "double"
#if 1
  typedef double vxl_ieee_64;
#else
# define vxl_ieee_64 void
#endif

#define VXL_HAS_IEEE_96 1
#define VXL_IEEE_96_STRING "long double"
#if 1
  typedef long double vxl_ieee_96;
#else
# define vxl_ieee_96 void
#endif

#define VXL_HAS_IEEE_128 0
#define VXL_IEEE_128_STRING "void"
#if 0
  typedef void vxl_ieee_128;
#else
# define vxl_ieee_128 void
#endif

/* -------------------- operating system services */

#define VXL_HAS_PTHREAD_H         1
#define VXL_HAS_SEMAPHORE_H       1
#define VXL_HAS_DBGHELP_H         0

/* -------------------- library quirks */

/* these should be 1 if the symbol in question is declared */
/* in the relevant header file and 0 otherwise. */

#define VXL_UNISTD_HAS_USECONDS_T 1
#define VXL_UNISTD_HAS_INTPTR_T   1
#define VXL_UNISTD_HAS_UALARM     1
#define VXL_UNISTD_HAS_USLEEP     1
#define VXL_UNISTD_HAS_LCHOWN     1
#define VXL_UNISTD_HAS_PREAD      1
#define VXL_UNISTD_HAS_PWRITE     1
#define VXL_UNISTD_HAS_TELL       0
#define VXL_UNISTD_HAS_GETPID     1

/* true if &lt;stdlib.h&gt; declares qsort() */
#define VXL_STDLIB_HAS_QSORT      1

/* true if &lt;stdlib.h&gt; declares lrand48() */
#define VXL_STDLIB_HAS_LRAND48    1

/* true if &lt;stdlib.h&gt; declares drand48() */
#define VXL_STDLIB_HAS_DRAND48    1

/* true if &lt;stdlib.h&gt; declares srand48() */
#define VXL_STDLIB_HAS_SRAND48    1

/* true if &lt;ieeefp.h&gt; declares finite() */
#define VXL_IEEEFP_HAS_FINITE     0

/* true if &lt;math.h&gt; declares finitef() */
#define VXL_C_MATH_HAS_FINITEF     1

/* true if &lt;math.h&gt; declares finite() */
#define VXL_C_MATH_HAS_FINITE     1

/* true if &lt;math.h&gt; declares finitel() */
#define VXL_C_MATH_HAS_FINITEL     1

/* true if &lt;math.h&gt; declares sqrtf() for the C compiler */
#define VXL_C_MATH_HAS_SQRTF      1

/* true if &lt;math.h&gt; declares lround() */
#define VXL_C_MATH_HAS_LROUND      1

/* true if usleep() returns void */
#define VXL_UNISTD_USLEEP_IS_VOID 0

/* true if gettime() takes two arguments */
#define VXL_TWO_ARG_GETTIME       0

/* true if &lt;ieeefp.h&gt; is available */
#define VXL_HAS_IEEEFP_H          0

#ifdef __APPLE__
/* true if in OsX &lt;math.h&gt; declares __isnand() */
#define VXL_APPLE_HAS_ISNAND 
#endif 

/* true if &lt;emmintrin.h&gt; is available */
#define VXL_HAS_EMMINTRIN_H   0

/* true if _mm_malloc and _mm_free are defined */
#define VXL_HAS_MM_MALLOC 0

/* true if _aligned_malloc and _aligned_free are defined */
#define VXL_HAS_ALIGNED_MALLOC 0

/* true if __mingw_aligned_malloc and __mingw_aligned_free are defined */
#define VXL_HAS_MINGW_ALIGNED_MALLOC 0

/* true if memalign is defined */
#define VXL_HAS_POSIX_MEMALIGN 0

#endif /* vxl_config_h_ */

</Text>
</Note>
<Note Name="/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/vcl/vcl_config_compiler.h">
<DateTime>Wed Nov 11 2009 21:46:22 SGT</DateTime>
<Text>
#ifndef vcl_config_compiler_h_
#define vcl_config_compiler_h_
//:
// \file
// This file either is or was generated from vcl_config_compiler.h.in

//----------------------------------------------------------------------
// syntax-like things.

//: VCL_HAS_BOOL
// Set to 1 if "bool" is accepted by the compiler as a built-in type.
#define VCL_HAS_BOOL 1


//: VCL_HAS_DYNAMIC_CAST
//
// True if the compiler supports dynamic cast.
//
#define VCL_HAS_DYNAMIC_CAST 1


//: VCL_HAS_RTTI
//
// True if the compiler supports RTTI, viz the 'typeid' function.
//
#define VCL_HAS_RTTI 1


//: VCL_HAS_TYPENAME
//
// True if the compiler supports the "typename" keyword
//
#define VCL_HAS_TYPENAME 1


//: VCL_HAS_EXPORT
//
// True if the compiler supports the "export" keyword
//
#define VCL_HAS_EXPORT 1


//: VCL_HAS_MUTABLE
//
// True if the compiler supports the "mutable" keyword
//
#define VCL_HAS_MUTABLE 1


//: VCL_HAS_EXPLICIT
//
// True if the compiler supports the "explicit" keyword
//
#define VCL_HAS_EXPLICIT 1


//: VCL_FOR_SCOPE_HACK:
//
// True if the compiler uses old-style 'for' loop scoping.
// Setting this nonzero causes the Henderson trick to be used.
#define VCL_FOR_SCOPE_HACK 0

//: VCL_COMPLEX_POW_WORKS
//
// It appears several programmers have (independently)
// not realised their lack of knowledge of complex numbers.
// pow(complex(-1,0),0.5) should return (0,1) not (Nan,0), etc.
#define VCL_COMPLEX_POW_WORKS 1


//: VCL_DEFAULT_VALUE(x)
//
// Used to provide default values for function args in definition
// Some compilers (GCC272) require defaults in template function definitions
// Other compilers (VC50) disallow defaults in both decls and defs

//#define VCL_DEFAULT_VALUE(x) /* no need */
//#define VCL_DEFAULT_VALUE(x) = x
#define VCL_DEFAULT_VALUE(x) /* no need */


//----------------------------------------------------------------------
// constant initializer issues.

//: VCL_STATIC_CONST_INIT_INT_DECL(x)
//
// ANSI allows
// \code
//     class A {
//       static const int x = 27;
//     };
// \endcode
// And there is a speed advantage, so we want to use it where supported.
// However, the standard also requires (9.4.2/4) that the constant be
// defined in namespace scope. (That is, space must be allocated.)
// To make matters worse, some compilers (at least VC 7) mistakenly
// allocate storage without the definition in namespace scope,
// which results in multiply defined symbols.
// To use the macro, use VCL_STATIC_CONST_INIT_INT_DECL in the class
// definition (header file). This declares the constant.
// \code
//     class A {
//       static const int x VCL_STATIC_CONST_INIT_INT_DECL(27);
//     };
// \endcode
// Use VCL_STATIC_CONST_INIT_INT_DEFN in some .cxx file to define
// the constant, but only if VCL_STATIC_CONST_INIT_INT_NO_DEFN
// evaluates to false.
// \code
//     #if !VCL_STATIC_CONST_INIT_INT_NO_DEFN
//     const int A::x VCL_STATIC_CONST_INIT_INT_DEFN(27);
//     #endif
// \endcode
//
// In order to be able to query the setting of this, one actually must
// define VCL_CAN_STATIC_CONST_INIT_INT to either 0 or 1.

//#define VCL_CAN_STATIC_CONST_INIT_INT 1 /* allowed */
//#define VCL_CAN_STATIC_CONST_INIT_INT 0 /* not allowed */
#ifndef VCL_CAN_STATIC_CONST_INIT_INT
# define VCL_CAN_STATIC_CONST_INIT_INT 1
#endif
#if VCL_CAN_STATIC_CONST_INIT_INT
# define VCL_STATIC_CONST_INIT_INT_DECL(x) = x
# define VCL_STATIC_CONST_INIT_INT_DEFN(x) /* initialized at declaration */
# define VCL_STATIC_CONST_INIT_INT_NO_DEFN 0
#else
# define VCL_STATIC_CONST_INIT_INT_DECL(x) /* not allowed */
# define VCL_STATIC_CONST_INIT_INT_DEFN(x) = x
# define VCL_STATIC_CONST_INIT_INT_NO_DEFN 0
#endif


//: VCL_STATIC_CONST_INIT_FLOAT(x)
//
// GCC allows the above, but with floating point types, ANSI doesn't.
// Again, we'll use it if we've got it.
//
// In order to be able to query the setting of this, one actually must
// define VCL_CAN_STATIC_CONST_INIT_FLOAT to either 0 or 1.

//#define VCL_CAN_STATIC_CONST_INIT_FLOAT 1 /* allowed */
//#define VCL_CAN_STATIC_CONST_INIT_FLOAT 0 /* not allowed */
#ifndef VCL_CAN_STATIC_CONST_INIT_FLOAT
# define VCL_CAN_STATIC_CONST_INIT_FLOAT 1
#endif
#if VCL_CAN_STATIC_CONST_INIT_FLOAT
# define VCL_STATIC_CONST_INIT_FLOAT_DECL(x) = x
# define VCL_STATIC_CONST_INIT_FLOAT_DEFN(x) /* initialized at declaration */
# define VCL_STATIC_CONST_INIT_FLOAT_NO_DEFN 0
#else
# define VCL_STATIC_CONST_INIT_FLOAT_DECL(x) /* not allowed */
# define VCL_STATIC_CONST_INIT_FLOAT_DEFN(x) = x
# define VCL_STATIC_CONST_INIT_FLOAT_NO_DEFN 0
#endif


//----------------------------------------------------------------------
// various template issues.

//: VCL_HAS_MEMBER_TEMPLATES
//
// True if the compiler supports template members of template classes.  e.g.
// \code
//     template &lt;class U&gt; class A {
//       template &lt;class V&gt; void f(V);
//     }
// \endcode
#define VCL_HAS_MEMBER_TEMPLATES 1


//: VCL_CAN_DO_PARTIAL_SPECIALIZATION
//
// True if the compiler supports partial specializations of templates. e.g.
// \code
// template &lt;class T&gt;
// class vector&lt;T*&gt; : public vector&lt;void *&gt; { .. inline methods .. };
// \endcode
//
#define VCL_CAN_DO_PARTIAL_SPECIALIZATION 1


//: VCL_DEFINE_SPECIALIZATION
//
// In order to *define* a template (function or class) specialization, the
// definition must be preceded by "template &lt;&gt;" on ISO-conforming compilers.
// Some compilers (eg gcc 2.7.2) make no distinction between an instance
// of a templated function and a function with the same name and signature,
// and so do not support the use of "template &lt;&gt;". Use VCL_DEFINE_SPECIALIZATION
// instead.
//
// Note that you DO NOT need to forward declare a specialization. E.g. if
// foo.h says "template &lt;class T&gt; void foo(T *);" and foo.cxx specializes
// void foo&lt;int&gt;(int *), the client doesn't need to know that the template
// symbol he links against is a specialization.

//#define VCL_DEFINE_SPECIALIZATION /* template &lt;&gt; */
//#define VCL_DEFINE_SPECIALIZATION template &lt;&gt;
#define VCL_DEFINE_SPECIALIZATION template &lt;&gt;


//: VCL_CANNOT_SPECIALIZE_CV
//
// Template specialization considers top-level cv-qualifiers of the
// argument type.  For example, A&lt;int&gt; and A&lt;int const&gt; are distinct
// types.  Some compilers (eg Borland 5.5) do not make this distinction.
// Specializations using top-level cv-qualifiers should not be defined
// in addition to the unqualified equivalents unless
// VCL_CANNOT_SPECIALIZE_CV is false.
//#define VCL_CANNOT_SPECIALIZE_CV 1 /* cannot specialize with cv-qualifiers */
//#define VCL_CANNOT_SPECIALIZE_CV 0 /* can specialize with cv-qualifiers */
#define VCL_CANNOT_SPECIALIZE_CV 0


//: VCL_TEMPLATE_MATCHES_TOO_OFTEN
//
// A function template is selected by overload resolution only if no
// non-template requires equal or better conversions.  Some compilers
// (eg MSVC 6.x and 7.0, Borland 5.5 and 5.6) select the template
// incorrectly in a case like this:
// \code
//    class A {};
//    template &lt;class T&gt; void f(T);
//    void f(const A&amp;);
//    void g() { f(A()); } // should call non-template
// \endcode
//
// The work-around is to explicitly give the template a worse
// conversion than the non-templated overloads:
// \code
//    class A {};
//    template &lt;class T&gt; inline void f(T t) { f(t, 1); }
//    template &lt;class T&gt; void f(T t, long);
//    void f(const A&amp;, int);
//    void g() { f(A()); } // will call non-template
// \endcode
// In this example, the inline one-argument template will always be
// called, which will call the real function with an "int" passed to
// the second argument.  The templated two-argument function has a
// "long" second argument while the others have "int".  Therefore, the
// template will be chosen only if no non-templates match.
//
// The VCL_TEMPLATE_MATCHES_TOO_OFTEN macro is set to 1
// if this work-around is required and 0 otherwise.
//#define VCL_TEMPLATE_MATCHES_TOO_OFTEN 1 /* need work-around */
//#define VCL_TEMPLATE_MATCHES_TOO_OFTEN 0 /* do not need it */
#define VCL_TEMPLATE_MATCHES_TOO_OFTEN 0


//: VCL_HAS_SLICED_DESTRUCTOR_BUG
//
// Consider this example code that creates a temporary in the call to f:
// \code
//  struct A { A(); A(const A&amp;); ~A(); };
//  struct B: public A { B(); B(const B&amp; b); ~B(); };
//  struct C { operator B(); };
//  void f(A);
//  void g(C c) { f(c); } // fails to call ~B() on 2nd temporary B
// \endcode
// Compilers will call c.operator B() to implement the conversion
// necessary to call f(c).  Some compilers will then create a
// temporary A by copy-constructing the temporary B to bind the
// argument of f.  Others will create a second temporary B by
// copy-constructing the first temporary B and bind the A-portion of
// the object to the argument of f.  Some compilers (at least Intel
// C++ 7.0 and 7.1) will create a second temporary B but forget to
// call ~B() when destroying it.  This can cause resource leaks.
//
// The VCL_HAS_SLICED_DESTRUCTOR_BUG is set to 1 if this bug exists in
// the compiler and 0 otherwise.
//#define VCL_HAS_SLICED_DESTRUCTOR_BUG 1 /* bug exists */
//#define VCL_HAS_SLICED_DESTRUCTOR_BUG 0 /* bug does not exist */
#define VCL_HAS_SLICED_DESTRUCTOR_BUG 0


//: VCL_HAS_WORKING_STRINGSTREAM
//
// True if a fully functional std::stringstream is found.
#define VCL_HAS_WORKING_STRINGSTREAM 1


//: VCL_NULL_TMPL_ARGS
//
// Define to &lt;&gt; for compilers that require them in friend template function
// declarations (i.e., EGCS, VC C++.NET 2003).

//#define VCL_NULL_TMPL_ARGS /* &lt;&gt; */
//#define VCL_NULL_TMPL_ARGS &lt;&gt;
#define VCL_NULL_TMPL_ARGS &lt;&gt;


//----------------------------------------------------------------------
// template instantiation

//: VCL_ALLOWS_INLINE_INSTANTIATION
//
// True if the compiler allows explicit instantiation of inline
// function templates. The native SGI CC 7.2.1 does not.
#define VCL_ALLOWS_INLINE_INSTANTIATION 1


//: VCL_NEEDS_INLINE_INSTANTIATION
//
// True if the compiler needs explicit instantiation of inline
// function templates. gcc 2.7.2 (with -fno-implicit-templates) does.
#define VCL_NEEDS_INLINE_INSTANTIATION 0


//: VCL_DO_NOT_INSTANTIATE(text, ret)
//
// If a method is defined on some template, but makes no sense for some
// instances of that template, the compiler should not complain unless the
// method is actually used.  For example
// \code
//     template &lt;class T&gt;
//     class T {
//       int bad_method() {
//         return T::f();  // Requires T to have static method f
//       }
//     };
// \endcode
//
// The language allows you to use a T&lt;int&gt; even though int::f() is garbage,
// *providing* you never call T.bad_method().
//
// Most compilers don't implement that yet, so the solution is to provide a
// dummy specialization of T::bad_method that returns something mundane and
// stops the standard bad_method from being generated.  For this, use:
// \code
//     VCL_DO_NOT_INSTANTIATE(int T::bad_method(), some_return_value)
// \endcode
// if the function is void, use VCL_VOID_RETURN as the return value

//#define VCL_DO_NOT_INSTANTIATE(text, ret) text { return ret; }
//#define VCL_DO_NOT_INSTANTIATE(text, ret) template &lt;&gt; text { return ret; }
//#define VCL_DO_NOT_INSTANTIATE(text, ret) /* no need -- magic compiler */
//FIXME #define VCL_DO_NOT_INSTANTIATE(text, ret) 
#define VCL_DO_NOT_INSTANTIATE(text, ret) \
VCL_DEFINE_SPECIALIZATION \
text { return ret; }


//: VCL_UNINSTANTIATE_SPECIALIZATION(symbol)
//
// OK, various compilers do various silly things about instantiation of
// functions/methods that have been specialized.  Use this macro to tell
// the compiler not to generate code for methods which have been specialized
// \code
//      VCL_UNINSTANTIATE_SPECIALIZATION(int T::specialized_method())
// \endcode
// It should be placed after the "template class A&lt;T&gt;;"

//#define VCL_UNINSTANTIATE_SPECIALIZATION(symbol)  @pragma do_not_instantiate text@
//#define VCL_UNINSTANTIATE_SPECIALIZATION(symbol) /* no need - sensible compiler */
//FIXME #define VCL_UNINSTANTIATE_SPECIALIZATION(symbol) 
#define VCL_UNINSTANTIATE_SPECIALIZATION(symbol) // which compiler needs this ?


//: VCL_UNINSTANTIATE_UNSEEN_SPECIALIZATION(symbol)
//
// gcc is sensible about specializations if it has seen the definition,
// but if it's in another file, need to use extern to tell it.
// \code
//      VCL_UNINSTANTIATE_UNSEEN_SPECIALIZATION(int T::specialized_method())
// \endcode
// It should be placed before the "template class A&lt;T&gt;;"

//#define VCL_UNINSTANTIATE_UNSEEN_SPECIALIZATION(symbol) extern symbol;
//#define VCL_UNINSTANTIATE_UNSEEN_SPECIALIZATION(symbol) /* no need */
//FIXME #define VCL_UNINSTANTIATE_UNSEEN_SPECIALIZATION(symbol) 
#define VCL_UNINSTANTIATE_UNSEEN_SPECIALIZATION(symbol) /* never used */


//: VCL_INSTANTIATE_STATIC_TEMPLATE_MEMBER(symbol)
//
// Some compilers (e.g. gcc 2.7.2) do not accept a templated definition
// of static members, as in
// \code
//   template &lt;class T&gt;
//   struct A {
//     A() { }
//     static char *fmt;
//   };
//
//   template &lt;class T&gt;
//   char *A&lt;T&gt;::fmt = 0;
//
//   template struct A&lt;int&gt;;
// \endcode
// The way round this is to supply an explicit definition for every
// instance of the class needed.
//
// Put the templated definition like this
// \code
//      #if VCL_CAN_DO_STATIC_TEMPLATE_MEMBER
//      template &lt;class T&gt;
//      char *A&lt;T&gt;::fmt = 0;
//      #endif
// \endcode
// and place
// \code
//      VCL_INSTANTIATE_STATIC_TEMPLATE_MEMBER(int A&lt;int&gt;::fmt = 0)
// \endcode
// before the
// \code
//      template class A&lt;int&gt;;
// \endcode
// with
// \code
//      VCL_UNINSTANTIATE_STATIC_TEMPLATE_MEMBER(A&lt;int&gt;::var)
// \endcode
// afterwards.

//#define VCL_INSTANTIATE_STATIC_TEMPLATE_MEMBER(symbol) /* no need */
//#define VCL_INSTANTIATE_STATIC_TEMPLATE_MEMBER(symbol) symbol;
//
#define VCL_CAN_DO_STATIC_TEMPLATE_MEMBER 1
#if VCL_CAN_DO_STATIC_TEMPLATE_MEMBER
# define VCL_INSTANTIATE_STATIC_TEMPLATE_MEMBER(symbol)   /* */
# define VCL_UNINSTANTIATE_STATIC_TEMPLATE_MEMBER(symbol) /* */
#else
# define VCL_INSTANTIATE_STATIC_TEMPLATE_MEMBER(symbol) symbol;
# define VCL_UNINSTANTIATE_STATIC_TEMPLATE_MEMBER(symbol) // which compiler needs this ?
#endif


//: VCL_CAN_DO_NON_TYPE_FUNCTION_TEMPLATE_PARAMETER
//
// Some compilers (e.g. SunPro 5.0) do not accept non-type template
// parameters in function templates. E.g.
// \code
// template &lt;class T, int n&gt; struct vicky { T data[n]; } // can do
//
// template &lt;class T, int n&gt;
// void a_function_template(vicky&lt;T, n&gt; const &amp;) { ... } // cannot
// \endcode
#define VCL_CAN_DO_NON_TYPE_FUNCTION_TEMPLATE_PARAMETER 1


//----------------------------------------------------------------------
// overload resolution problems.

//: VCL_NEED_FRIEND_FOR_TEMPLATE_OVERLOAD
//
// On some compilers (in particular gcc 2.7.2.3), the compiler doesn't
// know how to cast a templated derived class to a templated base class
// (eg. vnl_matrix_fixed&lt;3,3,double&gt; -&gt; vnl_matrix&lt;double&gt;) when doing overload
// resolution. Making the overloaded function a friend of the class makes
// the problem go away.
//
// True if the compiler needs this hack.

//#define VCL_NEED_FRIEND_FOR_TEMPLATE_OVERLOAD 0
//#define VCL_NEED_FRIEND_FOR_TEMPLATE_OVERLOAD 1
#define VCL_NEED_FRIEND_FOR_TEMPLATE_OVERLOAD 0


//: VCL_OVERLOAD_CAST
//
// Some compilers (gcc 2.7.2.3 and SGI native 6.0) often won't perform
// certain implicit casts. E.g. casting a templated derived class to a
// templated base class (see above), or even realizing that
// "template void foo(float const * const *, float * const *, int, int)"
// can be called with parameters of type "(float **, float **, int, int)".
//
//   To fix the code, it is tempting to add an explicit cast and get on
// with things, but that would throw away the checking performed by more
// helpful compilers. Use VCL_OVERLOAD_CAST instead.

//#define VCL_OVERLOAD_CAST(T, x) ((T)(x))
//#define VCL_OVERLOAD_CAST(T, x) (x)
#define VCL_OVERLOAD_CAST(T, x) ((T)(x))


//----------------------------------------------------------------------
// stuff


//: VCL_NO_STATIC_DATA_MEMBERS
//
// True if compiler does not support static data members in template classes.
//
#define VCL_NO_STATIC_DATA_MEMBERS 0


//: VCL_HAS_TEMPLATE_SYMBOLS
//
// True if the compiler mangles function template instances differently
// from non-templated functions with the same name and signature.
// This is correct behaviour.
//
#define VCL_HAS_TEMPLATE_SYMBOLS 1


//----------------------------------------------------------------------
// default template arguments

//: VCL_DEFAULT_TMPL_ARG(arg)
//
// It is wrong to provide a default for a template parameter in two
// declarations in the same scope (14.1.12), e.g.
// \code
//   template &lt;class S, class T = int&gt; class X;
//   template &lt;class S, class T = int&gt; class X { /* ... */ };
// \endcode
// is wrong.
// However, some older compilers insist on seeing the default argument
// again when defining a class body or instantiating.
// To satisfy them, use this macro as follows :
// \code
//   template &lt;class S, class T VCL_DEFAULT_TMPL_ARG(= int)&gt; X { /* ... */ };
//   template X&lt;double VCL_DEFAULT_TMPL_ARG(, int)&gt;;
// \endcode
//
// It's possible we need two macros, one for redeclaration and
// one for instantiation.

//#define VCL_DEFAULT_TMPL_ARG(arg) /* no need */
//#define VCL_DEFAULT_TMPL_ARG(arg) arg
#define VCL_DEFAULT_TMPL_ARG(arg) 

//
#define VCL_CAN_DO_COMPLETE_DEFAULT_TYPE_PARAMETER 1
#define VCL_CAN_DO_TEMPLATE_DEFAULT_TYPE_PARAMETER 1

// VCL_DFL_TYPE_PARAM_STLDECL(A, a) and VCL_DFL_TMPL_PARAM_STLDECL(A, a)
// EGCS doesn't like definition of default types, viz:
// \code
//   template &lt;class A = default&gt; class vector;
//   template &lt;class A = default&gt; class vector { ... };
// \endcode
// This macro is used to say "define if not previously defined, like
// \code
//   template &lt;VCL_DFL_TYPE_PARAM_STLDECL(A,a)&gt; class vector { ... };
// \endcode

//#define VCL_DFL_TYPE_PARAM_STLDECL(A,a) A = a
//#define VCL_DFL_TYPE_PARAM_STLDECL(A,a) A /* = a */
//#define VCL_DFL_TYPE_PARAM_STLDECL(A,a) __DFL_TYPE_PARAM(A,a)
//FIXME #define VCL_DFL_TYPE_PARAM_STLDECL(A,a) 
//
//#define VCL_DFL_TMPL_PARAM_STLDECL(A,a) A = a
//#define VCL_DFL_TMPL_PARAM_STLDECL(A,a) A /* = a */
//#define VCL_DFL_TMPL_PARAM_STLDECL(A,a) __STL_DFL_TMPL_PARAM(A,a)
//FIXME #define VCL_DFL_TMPL_PARAM_STLDECL(A,a) 


// VCL_DFL_TMPL_ARG(class)
// Similarly, when instantiating a templated class with a default
// template argument, some compilers don't like the redeclaration of
// that argument, while others insist on it.
// In such cases, specify the default argument as follows:
// \code
//   template class vector &lt;int VCL_DFL_TMPL_ARG(default_iterator) &gt;;
// \endcode
// (Note the missing comma after int: it is inside the macro.)

//#define VCL_DFL_TMPL_ARG(classname) , classname
//#define VCL_DFL_TMPL_ARG(classname) /* , classname */
//#define VCL_DFL_TMPL_ARG(classname) __DFL_TMPL_ARG(classname)
//FIXME #define VCL_DFL_TMPL_ARG(classname) 


//: VCL_SUNPRO_CLASS_SCOPE_HACK(A)
//
// Nice one.  Can't use std::vector&lt;T&gt; in a class on SunPro 5, must use
// std::vector&lt;T, std::allocator&lt;T&gt; &gt;.  Of course, we cannot expect that other
// compilers call the default allocator std::allocator&lt;T&gt;, so we must use
// a macro.  I could call it something generic, like
// VCL_CLASS_SCOPE_HACK, but to be honest, it's a sunpro problem,
// they deserve the blame.
// Usage (the comma is inside the macro) :
// \code
//    vector&lt;T VCL_SUNPRO_CLASS_SCOPE_HACK(std::allocator&lt;T &gt;)&gt;
// \endcode

//#define VCL_SUNPRO_CLASS_SCOPE_HACK(A) /* , A */
//#define VCL_SUNPRO_CLASS_SCOPE_HACK(A) , A
#define VCL_SUNPRO_CLASS_SCOPE_HACK(A) /* , A */


//----------------------------------------------------------------------
// exception and namespace issues


//: VCL_HAS_EXCEPTIONS
// Set to true if the compiler supports the use of exceptions.
#define VCL_HAS_EXCEPTIONS 1


//: VCL_HAS_NAMESPACES
// Set to true if the compiler supports the use of namespaces.
#define VCL_HAS_NAMESPACES 1


//: VCL_ALLOWS_NAMESPACE_STD
// Set to true if the compiler allows namespace std:: for the standard library.
#define VCL_ALLOWS_NAMESPACE_STD 1


//: VCL_NEEDS_NAMESPACE_STD
// Set to true if the compiler needs namespace std:: for the standard library.
#define VCL_NEEDS_NAMESPACE_STD 1

//----------------------------------------------------------------------
// infinity issues

//: VCL_NUMERIC_LIMITS_HAS_INFINITY
// Set to true if there is a numeric_limits and it reports having an floating point infinity.
#define VCL_NUMERIC_LIMITS_HAS_INFINITY 1

//: VCL_PROCESSOR_HAS_INFINITY
// Set to true if the processor really does have an infinity.
// Although this is strictly not a C++ issue, some platforms' versions of
// numeric_limits&lt;double&gt; imply that there is no infinity, when there is.
#define VCL_PROCESSOR_HAS_INFINITY 1

//----------------------------------------------------------------------
// signedness of char

//: VCL_CHAR_IS_SIGNED
// Set to true if the type "char" is signed.
#define VCL_CHAR_IS_SIGNED 1

//----------------------------------------------------------------------
// architecture macros removed -- they're not in the C++ standard

#endif // vcl_config_compiler_h_

</Text>
</Note>
<Note Name="/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/vcl/vcl_config_headers.h">
<DateTime>Wed Nov 11 2009 21:46:22 SGT</DateTime>
<Text>
#ifndef vcl_config_headers_h_
#define vcl_config_headers_h_
//:
// \file
// This file either is or was generated from vcl_config_headers.h.in

//--------------------------------------------------------------------------------

//: standard header files.
#define VCL_CXX_HAS_HEADER_CASSERT    1
#define VCL_CXX_HAS_HEADER_CISO646    1
#define VCL_CXX_HAS_HEADER_CSETJMP    1
#define VCL_CXX_HAS_HEADER_CSTDIO     1
#define VCL_CXX_HAS_HEADER_CTIME      1
#define VCL_CXX_HAS_HEADER_CCTYPE     1
#define VCL_CXX_HAS_HEADER_CLIMITS    1
#define VCL_CXX_HAS_HEADER_CSIGNAL    1
#define VCL_CXX_HAS_HEADER_CSTDLIB    1
#define VCL_CXX_HAS_HEADER_CWCHAR     1
#define VCL_CXX_HAS_HEADER_CERRNO     1
#define VCL_CXX_HAS_HEADER_CLOCALE    1
#define VCL_CXX_HAS_HEADER_CSTDARG    1
#define VCL_CXX_HAS_HEADER_CSTRING    1
#define VCL_CXX_HAS_HEADER_CWCTYPE    1
#define VCL_CXX_HAS_HEADER_CFLOAT     1
#define VCL_CXX_HAS_HEADER_CMATH      1
#define VCL_CXX_HAS_HEADER_CSTDDEF    1
#define VCL_CXX_HAS_HEADER_ALGORITHM  1
#define VCL_CXX_HAS_HEADER_IOMANIP    1
#define VCL_CXX_HAS_HEADER_LIST       1
#define VCL_CXX_HAS_HEADER_OSTREAM    1
#define VCL_CXX_HAS_HEADER_STREAMBUF  1
#define VCL_CXX_HAS_HEADER_BITSET     1
#define VCL_CXX_HAS_HEADER_IOS        1
#define VCL_CXX_HAS_HEADER_LOCALE     1
#define VCL_CXX_HAS_HEADER_QUEUE      1
#define VCL_CXX_HAS_HEADER_STRING     1
#define VCL_CXX_HAS_HEADER_COMPLEX    1
#define VCL_CXX_HAS_HEADER_IOSFWD     1
#define VCL_CXX_HAS_HEADER_MAP        1
#define VCL_CXX_HAS_HEADER_SET        1
#define VCL_CXX_HAS_HEADER_TYPEINFO   1
#define VCL_CXX_HAS_HEADER_DEQUE      1
#define VCL_CXX_HAS_HEADER_IOSTREAM   1
#define VCL_CXX_HAS_HEADER_MEMORY     1
#define VCL_CXX_HAS_HEADER_SSTREAM    1
#define VCL_CXX_HAS_HEADER_UTILITY    1
#define VCL_CXX_HAS_HEADER_EXCEPTION  1
#define VCL_CXX_HAS_HEADER_ISTREAM    1
#define VCL_CXX_HAS_HEADER_NEW        1
#define VCL_CXX_HAS_HEADER_STACK      1
#define VCL_CXX_HAS_HEADER_VALARRAY   1
#define VCL_CXX_HAS_HEADER_FSTREAM    1
#define VCL_CXX_HAS_HEADER_ITERATOR   1
#define VCL_CXX_HAS_HEADER_NUMERIC    1
#define VCL_CXX_HAS_HEADER_STDEXCEPT  1
#define VCL_CXX_HAS_HEADER_VECTOR     1
#define VCL_CXX_HAS_HEADER_FUNCTIONAL 1
#define VCL_CXX_HAS_HEADER_LIMITS     1
#define VCL_CXX_HAS_HEADER_STRSTREAM  1

#define VCL_CXX_HAS_HEADER_ISO646_H   1

//--------------------------------------------------------------------------------

#endif // vcl_config_headers_h_

</Text>
</Note>
<Note Name="/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/vcl/vcl_config_manual.h">
<DateTime>Wed Nov 11 2009 21:46:22 SGT</DateTime>
<Text>
#ifndef vcl_config_manual_h_
#define vcl_config_manual_h_
//:
// \file
// This file either is or was generated from vcl_config_manual.h.in
// \brief manual options


//: VCL_USE_NATIVE_STL
// Whether to use the compiler's STL.
#define VCL_USE_NATIVE_STL 1

// Whether new additions to the C++0x standard are available
// and where they are found
#define VCL_INCLUDE_CXX_0X 0
#define VCL_MEMORY_HAS_SHARED_PTR 0
#define VCL_TR1_MEMORY_HAS_SHARED_PTR 1


//: VCL_USE_NATIVE_COMPLEX
// Whether to use the compiler's complex type.
#define VCL_USE_NATIVE_COMPLEX 1
// Used to be set from VCL_USE_NATIVE_STL, which worked fine.
// If you don't use the stl flag's setting you're on your own.
// #define VCL_USE_NATIVE_COMPLEX VCL_USE_NATIVE_STL


//: VCL_USE_IMPLICIT_TEMPLATES
// Whether to use implicit template instantiation.
#define VCL_USE_IMPLICIT_TEMPLATES 1

//: VCL_USE_ATOMIC_COUNT
// Whether to use the atomic_count implemenation in vcl.
#define VCL_USE_ATOMIC_COUNT 1

#endif // vcl_config_manual_h_

</Text>
</Note>
<Note Name="/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/core/vil/vil_config.h">
<DateTime>Wed Nov 11 2009 21:46:22 SGT</DateTime>
<Text>
// This is core/vil/vil_config.h.in
#ifndef vil_config_h_in_
#define vil_config_h_in_
//:
// \file
// This source file is configured from vxl-SOURCE/core/vil/vil_config.h.in to
// vxl-BUILD/core/vil/vil_config.h by vxl's configuration process.
//
// Lists the image types that are compiled into vil

//: These are coded directly into vil
#define HAS_PNM   1
#define HAS_VIFF  1
#define HAS_IRIS  1
#define HAS_MIT   1
#define HAS_BMP   1
#define HAS_RAS   1
#define HAS_NITF  1

//: These formats have not yet been ported from vil1
#define HAS_GIF   0
#define HAS_GEN   0

//: These formats are supported using external libraries, and hence may not be present in a given build.
#define HAS_JPEG    1
#define HAS_PNG     1
#define HAS_TIFF    1
#define HAS_GEOTIFF 1
#define HAS_DCMTK   0
#define HAS_J2K     0


//: Set to 0 if you don't want to use SSE2 instructions to implement rounding, floor, and ceil functions.
#define VIL_CONFIG_ENABLE_SSE2_ROUNDING 0


#endif // vil_config_h_in_

</Text>
</Note>
<Note Name="/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/core/vnl/vnl_config.h">
<DateTime>Wed Nov 11 2009 21:46:22 SGT</DateTime>
<Text>
//:
// \file
// This source file is configured from vxl/core/vnl/vnl_config.h.in to
// vxl-build/core/vnl/vnl_config.h by vxl's configuration process.
#ifndef vnl_config_h_
#define vnl_config_h_

//: Set to 0 to disable bounds checks in vnl_matrix&lt;T&gt;::operator() and vnl_vector&lt;T&gt;::operator().
// Note that operator[] never performs bounds checks.
// This is not intended to also control *size* checks when doing matrix-vector arithmetic.
#define VNL_CONFIG_CHECK_BOUNDS   1

//: Set to 1 to enable the deprecated methods vnl_vector&lt;T&gt;::set_[xyzt]().
#define VNL_CONFIG_LEGACY_METHODS 0

//: Set to 0 if you don't need thread safe code (and use a more efficient alloc).
#define VNL_CONFIG_THREAD_SAFE    1

//: Set to 0 if you don't have SSE2 support on your target platform
#define VNL_CONFIG_ENABLE_SSE2    0

//: Set to 0 if you don't want to use SSE2 instructions to implement rounding, floor, and ceil functions.
#define VNL_CONFIG_ENABLE_SSE2_ROUNDING 0

#endif

</Text>
</Note>
<Note Name="/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/v3p/dcmtk/osconfig.h">
<DateTime>Wed Nov 11 2009 21:46:22 SGT</DateTime>
<Text>
Could not open "/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/v3p/dcmtk/osconfig.h" for reading.
</Text>
</Note>
<Note Name="/mnt/data/documents/Computer Vision/Computer Vision Courses - Lectures/Li Fei Fei - Recognizing and Learning Object Categories - ICCV2009/Demo of bag-of-word classifiers/bag_words_demo/bin/v3p/mpeg2/include/config.h">
<DateTime>Wed Nov 11 2009 21:46:22 SGT</DateTime>
<Text>
#ifndef mpeg_config_cmake_h_
#define mpeg_config_cmake_h_
/**
 * \file
 * This file either is or was generated from mpeg/include/config_cmake.h.in
 */

/*--------------------------------------------------------------------------*/

/* ppc architecture */
#define MPEG_ARCH_PPC 0
#if MPEG_ARCH_PPC
# define ARCH_PPC
#endif

/* x86 architecture */
/* n.b. The original configure script doesn't define this on my Linux x86 box.
   It seems to turn MMX commands, and so should have speed effects only. */
#define MPEG_ARCH_X86 1
#if MPEG_ARCH_X86
# define ARCH_X86
#endif

/* maximum supported data alignment */
#define MPEG_ATTRIBUTE_ALIGNED_MAX 0
#if MPEG_ATTRIBUTE_ALIGNED_MAX
# define ATTRIBUTE_ALIGNED_MAX 0
#endif

/* Define if you have the &lt;dlfcn.h&gt; header file. */
/* This doesn't appear to be used: IMS */
/* #undef HAVE_DLFCN_H */

/* Define if you have the &lt;inttypes.h&gt; header file. */
/* This doesn't appear to be used, but you will need
   provide and inttypes.h if it is missing */
/* #undef HAVE_INTTYPES_H */

/* Define if you have the `memalign' function. */
#define MPEG_HAVE_MEMALIGN 0
#if MPEG_HAVE_MEMALIGN
# define HAVE_MEMALIGN
#endif

/* Define if you have the &lt;memory.h&gt; header file. */
/* This doesn't appear to be used: IMS */
/* #undef HAVE_MEMORY_H */

/* Define if you have the &lt;stdint.h&gt; header file. */
/* This doesn't appear to be used: IMS */
/* #undef HAVE_STDINT_H */

/* Define if you have the &lt;stdlib.h&gt; header file. */
/* This doesn't appear to be used: IMS */
/* #undef HAVE_STDLIB_H */

/* Define if you have the &lt;strings.h&gt; header file. */
/* This doesn't appear to be used: IMS */
/* #undef HAVE_STRINGS_H */

/* Define if you have the &lt;string.h&gt; header file. */
/* This doesn't appear to be used: IMS */
/* #undef HAVE_STRING_H */

/* Define if you have the &lt;sys/stat.h&gt; header file. */
/* This doesn't appear to be used: IMS */
/* #undef HAVE_SYS_STAT_H */

/* Define if you have the &lt;sys/time.h&gt; header file. */
/* This doesn't appear to be used: IMS */
/* #undef HAVE_SYS_TIME_H */

/* Define if you have the &lt;sys/types.h&gt; header file. */
/* This doesn't appear to be used: IMS */
/* #undef HAVE_SYS_TYPES_H */

/* Define if you have the &lt;unistd.h&gt; header file. */
/* This doesn't appear to be used: IMS */
/* #undef HAVE_UNISTD_H */

/* libmpeg2 mediaLib support */
/* #undef LIBMPEG2_MLIB */

/* libvo MGA support */
/* #undef LIBVO_MGA */

/* libvo mediaLib support */
/* #undef LIBVO_MLIB */

/* libvo SDL support */
/* #undef LIBVO_SDL */

/* libvo X11 support */
/* #undef LIBVO_X11 */

/* libvo Xv support */
/* #undef LIBVO_XV */

/* mpeg2dec profiling */
/* This doesn't appear to be used: IMS */
/* #undef MPEG2DEC_GPROF */

/* Name of package */
/* This doesn't appear to be used: IMS */
/* #undef PACKAGE */

/* Define as the return type of signal handlers (`int' or `void'). */
/* This doesn't appear to be used: IMS */
/* #undef RETSIGTYPE */

/* The size of a `char', as computed by sizeof. */
/* This doesn't appear to be used: IMS */
/* #undef SIZEOF_CHAR */

/* The size of a `int', as computed by sizeof. */
/* This doesn't appear to be used: IMS */
/* #undef SIZEOF_INT */

/* The size of a `short', as computed by sizeof. */
/* #undef SIZEOF_SHORT */

/* Define if you have the ANSI C header files. */
/* This doesn't appear to be used: IMS */
/* #undef STDC_HEADERS */

/* Version number of package */
/* This doesn't appear to be used: IMS */
/* #undef VERSION */

/* Define if your processor stores words with the most significant byte first
   (like Motorola and SPARC, unlike Intel and VAX). */
/* This only appears to be used in video_out_x11.c, which is never compiled: IMS */
/* #undef WORDS_BIGENDIAN */

/* Define if the X Window System is missing or not being used. */
/* This doesn't appear to be used: IMS */
/* #undef X_DISPLAY_MISSING */

/* Define to empty if `const' does not conform to ANSI C. */
/* We don't support compilers this broken: IMS */
/* #undef const */

/* Define as `__inline' if that's what the C compiler calls it, or to nothing
   if it is not supported. */
/* We don't support compilers this broken: IMS */
#define inline __inline

/* Define as `__restrict' if that's what the C compiler calls it, or to
   nothing if it is not supported. */
/* This doesn't appear to be used: IMS */
/* #undef restrict */

/* Define to `unsigned' if &lt;sys/types.h&gt; does not define. */
/* We don't support compilers this broken: IMS */
/* #undef size_t */

#endif /* mpeg_config_cmake_h_ */

</Text>
</Note>
</BuildNameNotes>
</Site>
